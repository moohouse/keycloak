{"version":3,"file":"static/js/51.0ca9ab52.chunk.js","mappings":"ykBA+EaA,GAAQC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,aAAuC,SAACC,EAAOC,GAC3C,IACIC,EAaAF,EAbAE,UACIC,EAYJH,EAZAI,GACAC,EAWAL,EAXAK,SAAQC,EAWRN,EAVAO,GAAIC,OAAY,IAAAF,EAAG,KAAIA,EAAAG,EAUvBT,EATAU,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EACZE,EAQAX,EARAW,MACOC,EAOPZ,EAPAa,MACAC,EAMAd,EANAc,MACAC,EAKAf,EALAe,YAAWC,EAKXhB,EAJAiB,SAAUC,OAAU,IAAAF,GAAQA,EAClBG,EAGVnB,EAHAoB,SACAC,EAEArB,EAFAqB,QACGC,EAAIC,EACPvB,EAdE,qHAgBNwB,EAAAA,EAAAA,UAEA,IAAMpB,GAAKqB,EAAAA,EAAAA,GAAe,CACtB,qBAAwBtB,EACxB,gBAAmB,aAGvBuB,GAAgCC,EAAAA,EAAAA,UAAuB,OAAdR,QAAc,IAAdA,GAAAA,GAAwBS,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DN,EAAQQ,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,GAA0CJ,EAAAA,EAAAA,UAAmC,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA3EE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,GAA0BC,EAAAA,EAAAA,SAAO,GACjCC,GAAmBD,EAAAA,EAAAA,SAAO,GAC1BE,EAAwC,kBAAhBvB,EAA2B,IAAM,OAE/DwB,EAAAA,EAAAA,YAAU,gBACiBC,IAAnBrB,GAGJW,GAAY,SAAAV,GAMR,OALIA,IAAaD,IACbgB,EAAwBM,SAAU,EAClCJ,EAAiBI,SAAU,GAGxBtB,CACX,GACJ,GAAG,CAACA,KAEJoB,EAAAA,EAAAA,YAAU,WACDJ,EAAwBM,SAIP,OAAlBR,IAKJE,EAAwBM,SAAU,EAClCR,EAAcS,QAClB,GAAG,CAACT,IAEJ,IAAMU,GAAqBC,EAAAA,EAAAA,IAAiB,gBACjBJ,IAAnBrB,GAEAW,GAAY,GACL,OAAPT,QAAO,IAAPA,GAAAA,KAGAA,GAER,IAEQwB,EAAMC,IAAND,EAER,OAAIzB,EACO,KAIP2B,EAAAA,cAAA,MAAAC,OAAAC,OAAA,CACI7C,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IACPC,EAAAA,GAAAA,GAAM,WAAY,aAAFC,OAAe/C,GAAY,CAAE,eAAgBO,IAC7DF,EAAQ2C,KACRnD,GAEJS,MAAOA,GACF0B,EAAiBI,SAAW,CAAE,KAAQ,SAAU,CACrDxC,IAAKA,GACDqB,QAEOkB,IAAV1B,GACGiC,EAAAA,cAACvC,EAAY,CAACN,WAAWgD,EAAAA,EAAAA,IAAGC,EAAAA,GAAAA,GAAM,mBAAoBzC,EAAQI,QACzDA,GAGTiC,EAAAA,cAACT,EAAc,CAACpC,UAAWQ,EAAQK,aAAcA,GAChDG,GACG6B,EAAAA,cAAA,UACI9C,IAAKiC,EACLhC,WAAWgD,EAAAA,EAAAA,IAAGC,EAAAA,GAAAA,GAAM,iBAAkB,WAAYzC,EAAQ4C,OAC1DC,QAASZ,GAERE,EAAE,iBAKvB,KAGJhD,EAAM2D,aAAcC,EAAAA,EAAAA,UAAS,CAAE5D,MAAAA,IAE/B,IAEA6D,GAAiDC,EAAAA,EAAAA,IAAuB,CACpE,eAAiBF,EAAAA,EAAAA,UAAS,CAAE5D,MAAAA,IAC5B,WAAc,CAEV,eAAgB,wBAJhBiD,EAAcY,EAAdZ,eAAgBc,EAAoBF,EAApBE,qBASxBA,EAAqB,CACjB,KAAQ,KACR,SAAY,CACR,eAAgB,sBAIxBA,EAAqB,CACjB,KAAQ,KACR,SAAY,CAER,eAAgB,uB,wdCxIXC,GAAS/D,EAAAA,EAAAA,OAClBC,EAAAA,EAAAA,aAA+D,SAACC,EAAOC,G,QAE3D6D,EAeJ9D,EAfAI,GACW2D,EAcX/D,EAdAE,UACA8D,EAaAhE,EAbAgE,SACAlD,EAYAd,EAZAc,MACAmD,EAWAjE,EAXAiE,OAAMC,EAWNlE,EAVAmE,aAAAA,OAAY,IAAAD,EAAG,OAAMA,EAAAE,EAUrBpE,EATAqE,SAAAA,OAAQ,IAAAD,EAAG,UAASA,EAAAE,EASpBtE,EARAuE,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EACfE,EAOAxE,EAPAwE,UACAjB,EAMAvD,EANAuD,QACAkB,EAKAzE,EALAyE,kBACAC,EAIA1E,EAJA0E,SACAC,EAGA3E,EAHA2E,KACAhE,EAEAX,EAFAW,MACGW,EAAIC,EACPvB,EAhBE,sJAkBNwB,EAAAA,EAAAA,UAEA,IAAMpB,GAAKqB,EAAAA,EAAAA,GAAe,CACtB,gBAAmB,YACnB,qBAAwBqC,IAGpBc,GAASC,EAAAA,EAAAA,KAATD,KAEF1E,GAAYgD,EAAAA,EAAAA,IACdC,EAAAA,GAAAA,GAAAA,MAAAA,EAAAA,GAAE,CACE,SACa,YAAbkB,GAAsB,WAAAjB,OAED,wBAAbiB,EAAqC,sBAAwBA,GAE5D,WAATE,GAAiB,WAAAnB,OACD,WACR,OAAQmB,GACJ,IAAK,QACD,MAAO,KACX,IAAK,QACD,MAAO,KAEnB,CAPY,KAONnB,QAAA0B,EAAAA,EAAAA,QACKtC,IAAXyB,EACE,GACA,CAACA,OAAqBzB,IAAbwB,GAA0B,gBAAJZ,OAAqBe,YAEhD3B,IAAdgC,GAA2BA,EAAUtE,UACrC6D,GAGJ,YAAqBvB,IAAdgC,EACHzB,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACGuB,EAAS,CACbpE,GAA4B,QAAxB2E,EAAQ,OAARjB,QAAQ,IAARA,EAAAA,EAAYU,EAAUpE,UAAE,IAAA2E,EAAAA,EAAI3E,EAChCU,MAAY,OAALA,QAAK,IAALA,EAAAA,EAAS0D,EAAU1D,MAC1BZ,WAAWgD,EAAAA,EAAAA,IAAY,OAATsB,QAAS,IAATA,OAAS,EAATA,EAAWtE,UAAWA,GACpCS,MAAKqC,OAAAC,OAAAD,OAAAC,OAAA,GACW,OAATuB,QAAS,IAATA,OAAS,EAATA,EAAW7D,OACXA,GAEPV,IAAKA,GACDqB,GAEH0C,GAGLjB,EAAAA,cAAA,SAAAC,OAAAC,OAAA,GACQwB,EAAiB,CACrBrE,GAAqC,QAAjC4E,EAAQ,OAARlB,QAAQ,IAARA,EAAAA,EAA6B,OAAjBW,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrE,UAAE,IAAA4E,EAAAA,EAAI5E,EACzCF,WAAWgD,EAAAA,EAAAA,IAAoB,OAAjBuB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBvE,UAAWA,GAC5CS,MAAKqC,OAAAC,OAAAD,OAAAC,OAAA,GACmB,OAAjBwB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB9D,OACnBA,GAEPgE,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAyB,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBE,KACjC7D,MAAY,OAALA,QAAK,IAALA,EAAAA,EAA0B,OAAjB2D,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB3D,MACnCyC,QAAgB,OAAPA,QAAO,IAAPA,EAAAA,EAA4B,OAAjBkB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBlB,QACvCmB,SAAkB,OAARA,QAAQ,IAARA,EAAAA,EAA6B,OAAjBD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBC,SACzCzE,IAAKA,GACDqB,GAEH0C,EAGb,KAYJH,EAAOL,aAAcC,EAAAA,EAAAA,UAAS,CAAEI,OAAAA,IAEhC,K,2HC/IA,IACA,EAAe,IAA0B,0DCDzC,IACA,EAAe,IAA0B,yDCDzC,IACA,EAAe,IAA0B,2D,mYCInCoB,GAAQnF,EAAAA,EAAAA,OACVC,EAAAA,EAAAA,aAA2D,SAACC,EAAOC,GAC/D,IACIC,EAWAF,EAXAE,UACAE,EAUAJ,EAVAI,GACAU,EASAd,EATAc,MACAkD,EAQAhE,EARAgE,SAAQkB,EAQRlF,EAPAmF,mBAAAA,OAAkB,IAAAD,GAAOA,EAAAE,EAOzBpF,EANAqF,UAAAA,OAAS,IAAAD,GAAQA,EACjBnB,EAKAjE,EALAiE,OACSqB,EAITtF,EAJAuF,QAAOjB,EAIPtE,EAHAuE,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EACf3D,EAEAX,EAFAW,MACOY,EACPvB,EAZE,2GAcNwB,EAAAA,EAAAA,UAEA,IAAM+D,OACgB/C,IAAlB8C,OACM9C,EACA8C,aAAyBE,MACzBF,EACA,CAACA,GAEHzC,EAAMC,IAAND,EACF4C,EAAU,kBAAHrC,OAAqBhD,GAClC,OACI2C,EAAAA,cAAA,4BACqB0C,EACjBC,KAAK,SACLtF,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,WAAYkC,GAAa,iBAAkBnF,GAC/DS,MAAOA,EACPV,IAAKA,EAAG,8BACqBkF,GAE7BpC,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,eAAgB,sBAAuB,oBACzDJ,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,cAAe,wBACjCJ,EAAAA,cAAA,OACI7C,UAAY,WACR,OAAQqE,GACJ,IAAK,QACD,OAAOpB,EAAG,GAAHA,GAAM,YAAa,eAAgB,eAC9C,IAAK,QACD,OAAOA,EAAG,GAAHA,GAAM,YAAa,cAAe,eAC7C,IAAK,SACD,OAAOA,EAAG,GAAHA,GAAM,YAAa,cAAe,eAErD,CATY,IAWZJ,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,mBAClBJ,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,qBAClBJ,EAAAA,cAAA,UACI7C,UAAWiD,EAAG,GAAHA,GAAM,gBAAiB,UAClCrC,MAAO+B,EAAE,SAAQ,gBACFzC,EACfuE,KAAK,UAEJ9B,EAAE,WAGXE,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,sBAClBJ,EAAAA,cAAA,MAAI3C,GAAIqF,EAASvF,UAAWiD,EAAG,GAAHA,GAAM,yBAClBX,IAAXyB,GACGlB,EAAAA,cAAA,QAAM7C,UAAWiD,EAAG,GAAHA,GAAMc,EAAQ,eAElCnD,GAEJkD,QAEQxB,IAAZ+C,GACGxC,EAAAA,cAAA,OAAK7C,UAAU,oBACX6C,EAAAA,cAAA,MACI7C,UAAWiD,EAAG,GAAHA,GACP,gBACA,uBACA,gCACA,2BACA,8BAGH2B,EAAAA,EAAAA,GAAIS,GACAI,UACAC,KACG,SACIb,EACAc,G,QADsBd,EAApBe,cAAAA,OAAa,IAAAC,GAAOA,EAAKC,EAAWzE,EAAAwD,EAAtC,mBAEC,OACDhC,EAAAA,cAAA,MAAIkD,IAAKJ,GACL9C,EAAAA,cAACc,EAAAA,EAAMb,OAAAC,OAAA,GACC+C,EAAW,CACf3B,SACwB,QAApBW,EAAAgB,EAAY3B,gBAAQ,IAAAW,EAAAA,EACb,IAANa,EACK,UACA,aAEJC,EAEA,cAAeE,EACf,CACI,UAAahD,OAAAC,OAAAD,OAAAC,OAAA,GACN+C,EAAYxB,WAAS,CACxB,gBAAiBpE,KAGzB,CACI,kBAAqB4C,OAAAC,OAAAD,OAAAC,OAAA,GACd+C,EAAYvB,mBAAiB,CAChC,gBAAiBrE,KAXzB,CAAC,I,UA2BnE,KAGJ6E,EAAMzB,aAAcC,EAAAA,EAAAA,UAAS,CAAEwB,MAAAA,IAE/B,IAAAvB,GAAiDC,EAAAA,EAAAA,IAAuB,CACpE,eAAiBF,EAAAA,EAAAA,UAAS,CAAEwB,MAAAA,IAC5B,WAAc,CACV,MAAS,YAHTnC,EAAcY,EAAdZ,eAAgBoD,EAAoBxC,EAApBwC,qBAOxBA,EAAqB,CACjB,KAAQ,KACR,SAAY,CACR,MAAS,WAIjBA,EAAqB,CACjB,KAAQ,KACR,SAAY,CAER,MAAS,YClLjB,IAAMC,ED0LA,SAAsBC,GAaxB,IAAQC,EAA0BD,EAA1BC,kBAAmBjG,EAAOgG,EAAPhG,GAErB4F,EAAc,CAChB,GAAM,GAAF5C,OAAKhD,EAAE,mBACX,gBAAiBA,EACjB,iBAAkBiG,GAGhBC,EAAwB,GAAHlD,OAAMhD,EAAE,0BAEnC,SAASmG,EAAUvG,GACf,OACI+C,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACc,EAAAA,EAAM,CACHY,kBAAiBzB,OAAAC,OAAAD,OAAAC,OAAA,GACV+C,GAAW,CACd,GAAMM,EACN,KAAQ,SACR,UAAa,EACb,eAAe,IAEnBpG,UAAWiD,EAAG,GAAHA,GAAM,cAEhB,KAELJ,EAAAA,cAACkC,EAAKjC,OAAAC,OAAA,GAAKjD,EAAK,CAAEI,GAAIA,KAGlC,CAoBA,OAlBAmG,EAAU/C,YAAc,GAAHJ,OAAMhD,EAAE,WAE7BoG,EAAAA,EAAAA,uBAAsBD,EAAkB,OAAQA,EAAU/C,aAgBnD,CACH+C,UAAAA,EACAP,YAAAA,EACAS,KAjBJ,WACI,IAAMC,EAAeC,SAASC,eAAexG,GAG7CyG,OAAOC,KAAKJ,GAAcP,MAAMY,UACpC,EAaIzD,MAXJ,WACI,IAAMoD,EAAeC,SAASC,eAAexG,GAG7CyG,OAAOC,KAAKJ,GAAcP,MAAMa,SACpC,EAOIX,kBAAAA,EACAjG,GAAAA,EAER,CC/Pc6G,CAAY,CACtB,mBAAqB,EACrB,GAAM,mBAGGC,EACuB,CAChC,YAAef,EAAMH,YACrB,OAAU,qBACV,KAMWjD,EAAAA,eALP,WACI,IAAQF,EAAMC,IAAND,EACR,OAAOE,EAAAA,cAAAA,EAAAA,SAAA,KAAGF,EAAE,oBAChB,GAEY,OAKd,SAAUsE,IACZ,IAAQtE,EAAMC,IAAND,EAEAuE,EAAgB,WACpB,IAAMhH,GAAKiH,EAAAA,EAAAA,SAMX,MAAO,CAAED,WAJT,SAAoBE,GAChB,MAAO,GAAPlE,OAAUhD,EAAE,KAAAgD,OAAIkE,EACpB,EAGJ,CARwB,GAAhBF,WAUR,OACIrE,EAAAA,cAACoD,EAAMI,UAAS,CAACzF,MAAO+B,EAAE,oBAAqB0B,KAAK,SAChDxB,EAAAA,cAAA,OAAyB7C,UAAU,cAC/B6C,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,kBAClBJ,EAAAA,cAAA,YAAU7C,UAAWiD,EAAG,GAAHA,GAAM,gBACvBJ,EAAAA,cAAA,UACI7C,UAAWiD,EAAG,GAAHA,GAAM,sBAAuB,qBAGvCN,EAAE,iBAEPE,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,yBAChB,CAAC,QAAS,OAAQ,UAAoByC,KAAI,SAAA0B,GAAK,OAC7CvE,EAAAA,cAAA,OACIkD,IAAKqB,EACLpH,UAAWiD,EAAG,GAAHA,GAAM,iBAAkB,kBAEnCJ,EAAAA,cAAA,SACIwE,MAAOD,EACP3C,KAAK,QACLvE,GAAIgH,EAAWE,GACfE,KAAK,oBAETzE,EAAAA,cAAA,SAAO7C,UAAU,WAAWuH,QAASL,EAAWE,IAC3CzE,EAAE,GAADO,OAAIkE,EAAK,WACA,WAAVA,GACGvE,EAAAA,cAAA,QAAM7C,UAAWiD,EAAG,GAAHA,GAAM,iBAClBN,EAAE,uBAIfE,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,uBAClBJ,EAAAA,cAAA,OACI2E,MAAM,6BAENC,MAAM,OACNC,OAAO,OACPC,QAAQ,aAGJ,CACI,qBACA,gBACA,iBAENjC,KAAI,SAAAkC,GAAK,OACP/E,EAAAA,cAAA,OACIkD,IAAK6B,EACL5H,UAAWiD,EAAG,GAAHA,GAAM,MAADC,OAAO0E,IACvBC,UAAS,GAAA3E,QC9FjC4E,ED+F6B,WACG,OAAQV,GACJ,IAAK,OACD,OAAOW,EACX,IAAK,QACD,OAAOC,EACX,IAAK,SACD,OAAOC,EAEnB,CATC,GC9FpB,kBAAnBH,EAA8BA,EAAiBA,EAAeI,KDwG3B,KAAAhF,OAAI0E,KCzGnD,IAAsBE,CD0GsB,MAIZ,QAQtC,CAEAb,EAAQ3D,aAAcC,EAAAA,EAAAA,UAAS,CAAE0D,QAAAA,IAEjC,IAEAzD,GAAmDC,EAAAA,EAAAA,IAAuB,CACtE,eAAiBF,EAAAA,EAAAA,UAAS,CAAE0D,QAAAA,IAC5B,WAAc,CAEV,mBAAoB,4BACpB,MAAS,SACT,eAAgB,iEAChB,cAAe,iBACf,aAAc,kBACd,eAAgB,cAChB,oBAAqB,2CAVrBrE,EAAcY,EAAdZ,eAAgBuF,EAAsB3E,EAAtB2E,uBAexBA,EAAuB,CACnB,KAAQ,KACR,SAAY,CACR,mBAAoB,mBACpB,MAAS,QACT,eAAgB,gDAChB,cAAe,cACf,aAAc,aACd,eAAgB,UAChB,oBAAqB,2BAI7BA,EAAuB,CACnB,KAAQ,KACR,SAAY,CAER,mBAAoB,mCACpB,MAAS,SACT,eAAgB,0D,yOE5JlB,SAAUC,EAAoBlC,GAIhC,IAAQmC,EAAmBnC,EAAnBmC,KAAMC,EAAapC,EAAboC,SAEd,GAAoB,kBAATD,GAA8B,KAATA,EAC5B,YAAoB/F,IAAbgG,EAAyB,IAAHpF,OAAOoF,GAAa,GAIrD,IAAIC,EAASF,EAAKG,QAAQ,OAAQ,IAKlC,OAFAD,EAASA,EAAOC,QAAQ,gBAAiB,KAElC,IAAPtF,OAAWqF,EACf,C,iVCOaE,GAAO7I,EAAAA,EAAAA,OAChBC,EAAAA,EAAAA,aAAuD,SAACC,EAAOC,GAC3D,IAAQG,EAA4CJ,EAA5CI,GAAEK,EAA0CT,EAAxCU,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EAAEE,EAA0BX,EAA1BW,MAAOiI,EAAmB5I,EAAnB4I,MAAUtH,EAAIC,EAAKvB,EAA9C,mCAENwB,EAAAA,EAAAA,UAEA,IAAQoD,GAASC,EAAAA,EAAAA,KAATD,KAER,OACI7B,EAAAA,cAAA,MAAAC,OAAAC,OAAA,CACI/C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,WAAYzC,EAAQ2C,MACxC1C,MAAOA,EACPP,GAAIA,EACJH,IAAKA,GACDqB,GAEJyB,EAAAA,cAAA,MAAI7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,iBAAkBzC,EAAQmI,OAC7CD,EAAMhD,KAAI,SAAAkD,EAAwCjD,GAAK,I,EAA1C0C,EAAIO,EAAJP,KAAM/D,EAASsE,EAATtE,UAASuE,EAAAD,EAAEE,SAAAA,OAAQ,IAAAD,GAAQA,EAAU,OACrDhG,EAAAA,cAAA,MAAIkD,IAAKJ,GACL9C,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACGuB,EAAS,CACbpE,GACgB,QAAZ2E,EAAAP,EAAUpE,UAAE,IAAA2E,EAAAA,EAAA,GAAA3B,OACThD,EAAE,SAAAgD,OAAQkF,EAAoB,CAC7BC,KAAAA,IACF,KAAAnF,OAAIyC,GAEV3F,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,gBAAiBqB,EAAUtE,YAC1C8I,IAAQC,EAAAA,EAAAA,GAAA,GAAO,eAAiB,SAEpCV,G,KAO7B,KAGJI,EAAKnF,aAAcC,EAAAA,EAAAA,UAAS,CAAEkF,KAAAA,IAE9B,I,6UC5BaO,GAAWpJ,EAAAA,EAAAA,OACpBC,EAAAA,EAAAA,aAA2D,SAACC,EAAOC,G,MACvDG,EAAyDJ,EAAzDI,GAAEK,EAAuDT,EAArDU,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EAAEE,EAAuCX,EAAvCW,MAAOwI,EAAgCnJ,EAAhCmJ,OAAQC,EAAwBpJ,EAAxBoJ,WAAe9H,EAAIC,EAAKvB,EAA3D,iDAENwB,EAAAA,EAAAA,UAEA,IAAQqB,EAAMC,IAAND,EAEA+B,GAASC,EAAAA,EAAAA,KAATD,KAER,OACI7B,EAAAA,cAAA,MAAAC,OAAAC,OAAA,CACI/C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,gBAAiBzC,EAAQ2C,MAC7C1C,MAAOA,EACP0I,UAAW,EACXjJ,GAAIA,EACJH,IAAKA,GACDqB,GAEJyB,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,eAAgB,sBAAuB,oBACzDJ,EAAAA,cAAA,UACI7C,UAAWiD,EAAG,GAAHA,GAAM,iBAAkB,WAAU,gBAC/B,iBAEbN,EAAE,UAEPE,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,cAAe,iCACrBX,IAAX2G,GACGpG,EAAAA,cAAA,OACI7C,UAAWiD,EAAG,GAAHA,GACP,YACA,cACA,4BACA,aAGJJ,EAAAA,cAAA,OAAK7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,wBAAyBzC,EAAQyI,SACtDpG,EAAAA,cAAA,MAAI7C,UAAWiD,EAAG,GAAHA,GAAM,QAAS,aAAcgG,EAAOrI,OACnDiC,EAAAA,cAAA,KAAG7C,UAAWiD,EAAG,GAAHA,GAAM,YAAa,oBAC5BgG,EAAOG,gBAEK9G,IAAhB2G,EAAOI,MACJxG,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACGkG,EAAOI,KAAK/E,UAAS,CACzBpE,GAC4B,QAAxB2E,EAAAoE,EAAOI,KAAK/E,UAAUpE,UAAE,IAAA2E,EAAAA,EAAA,GAAA3B,OACrBhD,EAAE,gBAAAgD,OAAekF,EAAoB,CACpC,KAAQa,EAAOI,KAAKhB,QAG5BrI,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GACI,UACA,2BACA,sBACA,6BAEJgG,EAAOI,KAAK/E,UAAUtE,aAGzBiJ,EAAOI,KAAKhB,QAMhCa,EAAWxD,KAAI,SAAAkD,EAA8BjD,GAAK,I,EAAhC2D,EAAgBV,EAAhBU,iBAAkBZ,EAAKE,EAALF,MAAe,OAChD7F,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,YAAa,eAAgB8C,IAAKJ,GACpD9C,EAAAA,cAAA,MACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,0BACNzC,EAAQ+I,WAGZ1G,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACGuG,EAAiBhF,UAAS,CAC9BpE,GACiC,QAA7B2E,EAAAyE,EAAiBhF,UAAUpE,UAAE,IAAA2E,EAAAA,EAAA,GAAA3B,OAC1BhD,EAAE,kBAAAgD,OAAiBkF,EAAoB,CACtC,KAAQkB,EAAiBjB,OAC3B,KAAAnF,OAAIyC,GAEV3F,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,gBACNqG,EAAiBhF,UAAUtE,aAG9BsJ,EAAiBjB,OAG1BxF,EAAAA,cAAA,MAAI7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,sBAAuBzC,EAAQmI,OAClDD,EAAMhD,KAAI,SAAA8D,EAAgCC,GAAK,I,EAAlCnF,EAASkF,EAATlF,UAAW+D,EAAImB,EAAJnB,KAAMS,EAAQU,EAARV,SAAkB,OAC7CjG,EAAAA,cAAA,MAAIkD,IAAK0D,GACL5G,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACGuB,EAAS,CACbpE,GACgB,QAAZ2E,EAAAP,EAAUpE,UAAE,IAAA2E,EAAAA,EAAA,GAAA3B,OACThD,EAAE,SAAAgD,OAAQkF,EAAoB,CAC7B,KAAQC,IACV,KAAAnF,OAAIyC,EAAC,KAAAzC,OAAIuG,GAEfzJ,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,gBACNqB,EAAUtE,YAER8I,EAAgB,CAAE,eAAgB,QAAvB,CAAC,GAEjBT,G,WAW7C,KAGJW,EAAS1F,aAAcC,EAAAA,EAAAA,UAAS,CAAEyF,SAAAA,IAElC,IAAAxF,GAAoDC,EAAAA,EAAAA,IAAuB,CACvE,eAAiBF,EAAAA,EAAAA,UAAS,CAAEyF,SAAAA,IAC5B,WAAc,CAEV,MAAS,YAJTpG,EAAcY,EAAdZ,gBASR8G,EAT+ClG,EAAvBkG,yBASA,CACpB,KAAQ,KACR,SAAY,CACR,MAAS,WAMjB,I,uVCzGaC,GAAiB/J,EAAAA,EAAAA,OAC1BC,EAAAA,EAAAA,aAAgD,SAACC,EAAOC,GACpD,IAAQC,EAAiEF,EAAjEE,UAAW4J,EAAsD9J,EAAtD8J,MAAKrJ,EAAiDT,EAA/CU,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EAAEE,EAAiCX,EAAjCW,MAAWR,EAAsBH,EAA1BI,GAAiBkB,EAAIC,EAAKvB,EAAnE,+CAENwB,EAAAA,EAAAA,UAEA,IAAQqB,EAAMC,IAAND,EAEA+B,GAASC,EAAAA,EAAAA,KAATD,KAEFxE,GAAKqB,EAAAA,EAAAA,GAAe,CACtB,qBAAwBtB,EACxB,gBAAmB,oBAGjB4J,EAAY,SAAClE,GAAS,SAAAzC,OAAQhD,EAAE,UAAAgD,OAASyC,EAAC,EAEhD,OACI9C,EAAAA,cAAA,MAAAC,OAAAC,OAAA,CACI7C,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,UAAWzC,EAAQ2C,KAAMnD,GAC7CS,MAAOA,EACP+E,KAAK,aAAY,aACL7C,EAAE,aACd5C,IAAKA,GACDqB,GAEJyB,EAAAA,cAAA,MAAI7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,gBAAiBzC,EAAQmI,OAC5CiB,EAAMlE,KACH,SAAAkD,EAUIjD,GACA,I,IATI3F,EAAS4I,EAAT5I,UACAqI,EAAIO,EAAJP,KAAIQ,EAAAD,EACJE,SAAAA,OAAQ,IAAAD,GAAQA,EAChBvE,EAASsE,EAATtE,UAASwF,EAAAlB,EACTmB,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EACdE,EAAQpB,EAARoB,SAAQC,EAAArB,EACR9C,YAAAA,OAAW,IAAAmE,EAAG,CAAC,EAACA,EAGnB,OACDpH,EAAAA,cAAA,MACIkD,IAAKJ,EACL3F,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,gBAAiBzC,EAAQ0J,KAAMlK,SAEpCsC,IAAdgC,EACGzB,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACGuB,EAAS,CACbpE,GAAgB,QAAZ2E,EAAAP,EAAUpE,UAAE,IAAA2E,EAAAA,EAAA,GAAA3B,OAAOhD,EAAE,UAAAgD,OAASyC,GAClC3F,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,gBACNzC,EAAQ6I,KACR/E,EAAUtE,YAET8I,IAAQC,EAAAA,EAAAA,GAAA,GAAO,eAAiB,SAEpCV,GAGLxF,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,SAAAC,OAAAC,OAAA,GACQ+C,EAAW,CACf5F,GAAkB,QAAd4E,EAAAgB,EAAY5F,UAAE,IAAA4E,EAAAA,EAAA,GAAA5B,OAAOhD,EAAE,YAAAgD,OAAWyC,GACtC3F,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,eACN6C,EAAY9F,UACZQ,EAAQ2J,KACX,iBACc,EAAK,gBACLN,EAAUlE,IACpBmD,IAAQC,EAAAA,EAAAA,GAAA,GAAO,gBAAiB,IAEpCV,GAEiB,IAArB0B,EAAUK,QACPvH,EAAAA,cAAC4F,EAAI,CACDjI,QAAS,CACL,MAAQwC,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,eAAgBzC,EAAQ2C,MACzC,KAAQ3C,EAAQ6J,UAEpB3B,MAAOqB,EACP7J,GAAI2J,EAAUlE,UAGRrD,IAAb0H,GACGnH,EAAAA,cAACmG,EAAQ,CACLxI,QAAS,CACL,MAAQwC,EAAAA,EAAAA,IACJC,EAAG,GAAHA,GAAM,eACNzC,EAAQwJ,UAEZ,OAAUxJ,EAAQ8J,eAClB,SAAY9J,EAAQ+J,iBACpB,KAAQ/J,EAAQ6J,UAEpBnK,GAAI2J,EAAUlE,GACdsD,OAAQe,EAASf,OACjBC,WAAYc,EAASd,c,KAWjE,KAGJS,EAAerG,aAAcC,EAAAA,EAAAA,UAAS,CAAEoG,eAAAA,IAExC,IAEAnG,GAA0DC,EAAAA,EAAAA,IAAuB,CAC7E,eAAiBF,EAAAA,EAAAA,UAAS,CAAEoG,eAAAA,IAC5B,WAAc,CAEV,YAAa,oBAJb/G,EAAcY,EAAdZ,gBASR4H,EATqDhH,EAA7BgH,+BASM,CAC1B,KAAQ,KACR,SAAY,CACR,YAAa,eCtMrB,I,oXCkCaC,GAAY7K,EAAAA,EAAAA,OACrBC,EAAAA,EAAAA,aAA2C,SAACC,EAAOC,GAC/C,IACIC,EAWAF,EAXAE,UACIC,EAUJH,EAVAI,GACOwK,EASP5K,EATA8H,MAAK+C,EASL7K,EARA8K,IAAAA,OAAG,IAAAD,GAAQA,EAAApK,EAQXT,EAPAU,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EACZE,EAMAX,EANAW,MAAKoK,EAML/K,EALAgL,YAAAA,OAAW,IAAAD,EAAG,SAAAjC,GAAA,IAAG5I,EAAS4I,EAAT5I,UAAWE,EAAE0I,EAAF1I,GAAI6K,EAAWnC,EAAXmC,YAAatG,EAAImE,EAAJnE,KAAI,OAC7C5B,EAAAA,cAAA,SAAO7C,UAAWA,EAAWE,GAAIA,EAAI6K,YAAaA,EAAatG,KAAMA,GAAQ,EAChFoG,EACDG,EAEAlL,EAFAkL,cACG5J,EAAIC,EACPvB,EAZE,mFAcNwB,EAAAA,EAAAA,UAEA,IAAQqB,EAAMC,IAAND,EAEFiF,EAAmB,OAAX8C,QAAW,IAAXA,EAAAA,EAAe/H,EAAE,SAEzBzC,GAAKqB,EAAAA,EAAAA,GAAe,CACtB,gBAAmB,gBACnB,qBAAwBtB,IAGtBgL,EAAU,UAAH/H,OAAahD,EAAE,UAE5B,OACI2C,EAAAA,cAAA,MAAAC,OAAAC,OAAA,CACI7C,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,gBAAiB2H,GAAO,qBAC9BpK,EAAQ2C,KACRnD,GAEJwF,KAAK,SACLzF,IAAKA,EACLU,MAAOA,GACHW,GAEJyB,EAAAA,cAAA,SAAO7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,YAAazC,EAAQoH,OAAQL,QAAS0D,GAC5DrD,GAIJkD,EAAY,CACT,UAAa7H,EAAG,GAAHA,GAAM,YACnB,YAAe2E,EACf,KAAQ,SACR,GAAMqD,IAEVpI,EAAAA,cAACqI,EAAY,CAAChL,GAAE,GAAAgD,OAAKhD,EAAE,WAAWiL,cAAeF,EAAS5H,QAAS2H,IAG/E,KAGJP,EAAUnH,aAAcC,EAAAA,EAAAA,UAAS,CAAEkH,UAAAA,IAEnC,IAEOjH,GAAqDC,EAAAA,EAAAA,IAAuB,CAC/E,eAAiBF,EAAAA,EAAAA,UAAS,CAAEkH,UAAAA,IAC5B,WAAc,CAEV,MAAS,gBAJF7H,EAAcY,EAAdZ,gBASfwI,EATuD5H,EAAxB4H,0BASN,CACrB,KAAQ,KACR,SAAY,CACR,MAAS,Y,sCCjGX,SAAUF,EAAapL,GACzB,IAAQqL,EAAwDrL,EAAxDqL,cAAwBE,EAAgCvL,EAAzCuD,QAA4BpD,EAAaH,EAAjBI,GAEvCyC,EAAMC,IAAND,EAER2I,GAAwBC,EAAAA,EAAAA,aAAW,SAAAC,GAAC,OAAIA,EAAI,CAAC,GAAE,GAAtCC,GAAwC9J,EAAAA,EAAAA,GAAA2J,EAAA,GAA7B,GAEpB9J,GACIC,EAAAA,EAAAA,WAAS,iBAAO,CACZ,eAAiBvB,EAAAA,EAAAA,KAAiB,iBAAM,EAAE,IAC1C,iBAAmBA,EAAAA,EAAAA,KAAe,WAC9B,IAEJ,mBAAqBA,EAAAA,EAAAA,KAAe,WAChC,IAEJ,mBAAqBA,EAAAA,EAAAA,KAAkB,kBAAM,CAAK,IACrD,IAAEwB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAAkK,EAAAhK,EAAA,GAVEiK,EAAiBD,EAAjBC,kBAAmBC,EAAaF,EAAbE,cAAeC,EAAeH,EAAfG,gBAAiBC,EAAiBJ,EAAjBI,kBAAqBC,EAAWrK,EAAA,GAYtF2B,GAAUX,EAAAA,EAAAA,IAAiB,WAC7B,IAAMsJ,EAAaJ,IAEA,KAAfI,GAKS,OAAbX,QAAa,IAAbA,GAAAA,EAAgBW,GAChBH,KALIF,GAMR,IAEMM,OAAuC3J,IAAlB+I,EAiG3B,OA/FAhJ,EAAAA,EAAAA,YAAU,WACN,IAAM6J,EAAezF,SAASC,eAAeyE,IAE7C7J,EAAAA,EAAAA,QAAwB,OAAjB4K,EAAuB,GAAFhJ,OAAKiI,EAAa,wBAC9C7J,EAAAA,EAAAA,QACI,UAAW4K,GAA8C,kBAAvBA,EAAa7E,MAAkB,GAAAnE,OAC9DiI,EAAa,2BAGpB7J,EAAAA,EAAAA,SAAO6K,EAAAA,EAAAA,IAAqBD,IAE5BH,EAAY,CACR,kBAAqB,kBAAMG,EAAa1J,OAAO,EAC/C,cAAiB,kBAAM0J,EAAa7E,KAAK,EACzC,gBAAmB,kBAAO6E,EAAa7E,MAAQ,EAAE,EACjD,kBAAqB,kBAAMZ,SAAS2F,gBAAkBF,CAAY,IAGtE,IAAMG,EAA2B,GAG7BC,EClEN,SAA4BpG,GAI9B,IAAQgG,EAA4ChG,EAA5CgG,aAAwBK,EAAoBrG,EAA9BsG,SAEhBH,EAA2B,GAGvBI,EAAsB3J,OAAO4J,yBAAyBR,EAAc,SAE1EG,EAASM,MAAK,YACVrL,EAAAA,EAAAA,aAA+BgB,IAAxBmK,GACP3J,OAAO8J,eAAeV,EAAc,QAASO,EACjD,IAEA,IAAMI,EAAwB/J,OAAOgK,eAAeZ,GAC9Ca,EAAajK,OAAO4J,yBAAyBG,EAAuB,SA4D9E,OA1DI/J,OAAO8J,eAAeV,EAAc,QAAS,CACzC,IAAO,WAAiB,QAAAc,EAAAC,UAAA7C,OAAJ8C,EAAI,IAAA5H,MAAA0H,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,GAAAF,UAAAE,GAEpB,OAAOJ,EAAWK,IAAIC,MAAMC,KAAMJ,EACtC,EACA,IAAO,WAAiB,QAAAK,EAAAN,UAAA7C,OAAJ8C,EAAI,IAAA5H,MAAAiI,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJN,EAAIM,GAAAP,UAAAO,GAEpBT,EAAWU,IAAIJ,MAAMC,KAAMJ,GAC3B,IAAMQ,EAAWJ,KAAKjG,MAItB,OAFAkF,IAEOmB,CACX,IAIRxB,EAAayB,iBACT,QACC,WACG,IAAMnB,EAAW,WACbD,GACJ,EAIA,OAFAF,EAASM,MAAK,kBAAMT,EAAa0B,oBAAoB,QAASpB,EAAS,IAEhEA,CACX,CARC,IAWLN,EAAayB,iBACT,UACC,WACG,IAAMnB,EAAW,SAACqB,GACd,GAAkB,WAAdA,EAAM9H,IAAkB,CACxB,IAAM+H,EAAQC,YAAW,WACrB1B,EAAS2B,OAAO3B,EAAS4B,QAAQC,GAAU,GAC3C3B,GACJ,GAAG,IAEG2B,EAAU,WACZC,aAAaL,EACjB,EAEAzB,EAASM,KAAKuB,E,CAEtB,EAIA,OAFA7B,EAASM,MAAK,kBAAMT,EAAa0B,oBAAoB,QAASpB,EAAS,IAEhEA,CACX,CAnBC,IA0BE,CAAE0B,QAJT,WACI7B,EAAS+B,SAAQ,SAAAF,GAAO,OAAIA,GAAS,GACzC,EAGJ,CDZgCG,CAAkB,CAClCnC,aAAAA,EACA,SAAY,kBAAMT,GAAa,IAF3ByC,EAAO5B,EAAP4B,QAqEZ,OAhEI7B,EAASM,KAAKuB,GAGdjC,IACAC,EAAayB,iBACT,QACC,WACG,IAAMnB,EAAW,WAAH,OAASf,GAAa,EAIpC,OAFAY,EAASM,MAAK,kBAAMT,EAAa0B,oBAAoB,QAASpB,EAAS,IAEhEA,CACX,CANC,IASLN,EAAayB,iBACT,OACC,WACG,IAAMnB,EAAW,WAAH,OAASf,GAAa,EAIpC,OAFAY,EAASM,MAAK,kBAAMT,EAAa0B,oBAAoB,OAAQpB,EAAS,IAE/DA,CACX,CANC,KAUJP,IACDC,EAAayB,iBACT,UACC,WACG,IAAMnB,EAAW,SAACqB,GACI,UAAdA,EAAM9H,MAIV1C,IACA6I,EAAaoC,OACjB,EAIA,OAFAjC,EAASM,MAAK,kBAAMT,EAAa0B,oBAAoB,UAAWpB,EAAS,IAElEA,CACX,CAbC,IAgBLN,EAAayB,iBACT,UACC,WACG,IAAMnB,EAAW,SAACqB,GACI,WAAdA,EAAM9H,KAIVmG,EAAaoC,MACjB,EAIA,OAFAjC,EAASM,MAAK,kBAAMT,EAAa0B,oBAAoB,UAAWpB,EAAS,IAElEA,CACX,CAZC,KAgBF,WACHH,EAAS+B,SAAQ,SAAAF,GAAO,OAAIA,GAAS,GACzC,CACJ,GAAG,CAAC/C,EAAec,SAEG3J,IAAlB+I,IAAgCS,KAA2C,KAApBF,IAKvD/I,EAAAA,cAAA,UACI3C,GAAID,EACJD,UAAWiD,EAAG,GAAHA,GAAM,UACjBrC,MAAO+B,EAAE,SACTU,QAASA,EACT5C,WACsB6B,IAAlB+I,OACM/I,EACA,CACI,SAAY,WACZ,MAAS,IAItBK,EAAE,UAlBA,IAqBf,C,iVE3Da4L,GAAS3O,EAAAA,EAAAA,OAClBC,EAAAA,EAAAA,aAAwC,SAACC,EAAOC,GAC5C,IACIC,EAcAF,EAdAE,UACIC,EAaJH,EAbAI,GACAsO,EAYA1O,EAZA0O,SACAC,EAWA3O,EAXA2O,aACAC,EAUA5O,EAVA4O,eACAC,EASA7O,EATA6O,cAAaC,EASb9O,EARA+O,WAAAA,OAAU,IAAAD,OAAGtM,EAASsM,EAAAE,EAQtBhP,EAPAiP,iBAAAA,OAAgB,IAAAD,EAAG,GAAEA,EACrBE,EAMAlP,EANAkP,aACAC,EAKAnP,EALAmP,kBACAC,EAIApP,EAJAoP,oBAAmB3O,EAInBT,EAHAU,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EACZE,EAEAX,EAFAW,MACGW,EAAIC,EACPvB,EAfE,2LAiBNwB,EAAAA,EAAAA,UAEA,IAAMpB,EAAa,OAARD,QAAQ,IAARA,EAAAA,EAAY,YAEjBkP,EAAc,GAAHjM,OA1Bc,oBA0Be,KAAAA,OAAIhD,GAC5CkP,EAAe,GAAHlM,OAAMhD,EAAE,gBACpBmP,EAAgB,GAAHnM,OAAMhD,EAAE,iBACrBiL,EAAgB,GAAHjI,OAAMhD,EAAE,iBAErBoP,OACoBhN,IAAtB2M,QAA2D3M,IAAxB4M,GAEvCK,EAAAA,EAAAA,GAA4B,CAAEf,SAAAA,EAAUG,cAAAA,IAExC,IAAQhM,EAAMC,IAAND,EACG6M,EAAeC,IAAlB9M,EAEA+B,GAASC,EAAAA,EAAAA,KAATD,KAEFgL,EACF7M,EAAAA,cAAA,MAAI7C,UAAWiD,EAAG,GAAHA,GAAM,kBAChB8L,EAAiBrJ,KAAI,SAACiK,EAAiBhK,GAAC,OACrC9C,EAAAA,cAAA,MAAIkD,IAAKJ,IACHiK,EAAAA,EAAAA,WACED,EACAA,aAA2B7M,QAAU,SAAU6M,GAI/C9M,EAAAA,cAACgN,EAAqB,CAClB3P,GAAE,GAAAgD,OAAKhD,EAAE,uBAAAgD,OAAsBkF,EAAoB,CAC/C,SAAY,GACZ,KAAQuH,EAAgBtH,OAC1B,KAAAnF,OAAIyC,GACNgK,gBAAiBA,IAPrBA,EAUH,KAKjB,OACI9M,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACoE,EAAAA,GAAO,MACRpE,EAAAA,cAAA,SAAAC,OAAAC,OAAA,CACIyC,KAAK,SACLtF,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,aAAczC,EAAQ2C,KAAMnD,GAChDD,IAAKA,EACLU,MAAOA,GACHW,GAEJyB,EAAAA,cAAA,OAAK7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,mBAA2BzC,EAAQsP,OACxDjN,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,iBAClBJ,EAAAA,cAAA,OAAK7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,uBAAwBzC,EAAQuP,UACrDlN,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,mBAAoB,mBAC1BzC,EAAQwP,QAGZnN,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,wBACNzC,EAAQgO,WAGZ3L,EAAAA,cAAA,OAAK7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,mBAAoBzC,EAAQyP,OAC/C,WACE,IAAMnM,EACFjB,EAAAA,cAAA,KAAG7C,UAAWiD,EAAG,GAAHA,GAAM,YAAauL,GAGrC,YAAwBlM,IAAjBmM,EACH3K,EAEAjB,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GAAK4L,GAAgB7K,EAElC,CAVE,SAYYxB,IAAjB0M,GACGnM,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,uBACNzC,EAAQ0P,WAGZrN,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GAAK4L,GACN9L,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,qBACNzC,EAAQ0P,UAEZzP,MAAQ,WACJ,OAAQuO,EAAamB,aACjB,IAAK,WACD,MAAO,CAAE,MAAS,UACtB,IAAK,aACD,MAAO,CACH,SAAY,aAG5B,CATQ,GAURjI,IAAK8G,EAAaoB,OAClBC,IAAKrB,EAAaqB,SAMhCtB,EAAiB3E,OAAS,QACT9H,IAAfuM,GACAS,IACAzM,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,qBACNzC,EAAQ8P,SAGXhB,GACGzM,EAAAA,cAAA,UACI3C,GAAE,GAAAgD,OAAKhD,EAAE,kBACTF,UAAWiD,EAAG,GAAHA,GACP,iBACA,UACH,kBACe,EAAK,gBACNoM,EACfzO,MAAO4O,EAAW,UAEjBA,EAAW,UAGpB3M,EAAAA,cAAA,UACI7C,UAAWiD,EAAG,GAAHA,GAAM,eAAgB,UAAS,iBAC3B,QAAO,gBACPkM,EAAW,gBACZ,OACdjP,GAAIkP,EACJxO,MAAO+B,EAAE,SAERA,EAAE,gBAKDL,IAAjBmM,GACG5L,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,sBACNzC,EAAQ+P,UAGZ1N,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GAAK4L,GACN9L,EAAAA,cAAA,KACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,4BACNzC,EAAQiO,eAGXA,SAGWnM,IAAnBoM,GACG7L,EAAAA,cAAA,KACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,8BACNzC,EAAQkO,iBAGXA,MAOnBK,EAAiB3E,OAAS,GAAKkF,IAC7BzM,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,qBACjB8L,EAAiB3E,OAAS,GACvBvH,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,0BACNzC,EAAQgQ,aAGXd,GAIRJ,GACGzM,EAAAA,cAAA,OACI7C,UAAWiD,EAAG,GAAHA,GAAM,oBAAqB,YACtC/C,GAAImP,GAEJxM,EAAAA,cAAA,OACI7C,UAAWiD,EAAG,GAAHA,GACP,eACA,2BAGJJ,EAAAA,cAAA,UACI3C,GAAE,GAAAgD,OAAKhD,EAAE,kBACTF,UAAWiD,EAAG,GAAHA,GAAM,gBAAiB,UAAS,gBAC5BoM,EACfzO,MAAO+B,EAAE,UAERA,EAAE,UAEPE,EAAAA,cAAA,OACI7C,UAAWiD,EAAG,GAAHA,GAAM,iBACjBuC,KAAK,UAEL3C,EAAAA,cAAA,SACI7C,UAAWiD,EAAG,GAAHA,GAAM,YACjBsE,QAAS4D,GAERqE,EAAW,WAGK,OAAjBP,QAAiB,IAAjBA,EAAAA,EACC,SAAArG,GAAA,IACG5I,EAAS4I,EAAT5I,UACAE,EAAE0I,EAAF1I,GACA6K,EAAWnC,EAAXmC,YACAtG,EAAImE,EAAJnE,KAAI,OAEJ5B,EAAAA,cAAA,SACI7C,UAAWA,EACXE,GAAIA,EACJ6K,YAAaA,EACbtG,KAAMA,GACR,GAER,CACE,UAAaxB,EAAG,GAAHA,GAAM,YACnB,GAAMkI,EACN,YAAeqE,EAAW,SAC1B,KAAQ,WAEZ3M,EAAAA,cAACqI,EAAY,CACThL,GAAE,GAAAgD,OAAKhD,EAAE,sBACTiL,cAAeA,EACf9H,QAAS6L,iBAWhC5M,IAAfuM,GAAwD,IAA5BE,EAAiB3E,SAC3CvH,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IAAGC,EAAG,GAAHA,GAAM,kBAAmB,YAAazC,EAAQiQ,MAC5DvQ,GAAIiP,EAAW,kBACEC,GAEjBvM,EAAAA,cAAA,OAAK7C,UAAWiD,EAAG,GAAHA,GAAM,iBAClBJ,EAAAA,cAAA,UACI3C,GAAE,GAAAgD,OAAKhD,EAAE,gCACTF,UAAWiD,EAAG,GAAHA,GAAM,gBAAiB,UAAS,gBAC5BkM,EACfvO,MAAO+B,EAAE,UAERA,EAAE,UAEPE,EAAAA,cAAA,OACI7C,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,yBACNzC,EAAQuJ,YAGX2F,QAEWpN,IAAfuM,IACIA,aAAsBvJ,MACnBzC,EAAAA,cAAC8G,EAAc,CACXzJ,GAAE,GAAAgD,OAAKhD,EAAE,oBACT0J,MAAOiF,IAGXA,MAQpC,KAGJN,EAAOjL,aAAcC,EAAAA,EAAAA,UAAS,CAAEgL,OAAAA,IAEhC,QAEO/K,GAAkDC,EAAAA,EAAAA,IAAuB,CAC5E,eAAiBF,EAAAA,EAAAA,UAAS,CAAEgL,OAAAA,IAC5B,WAAc,CAEV,KAAQ,OACR,MAAS,YALF3L,EAAcY,EAAdZ,eAuBT,SAAUiN,EAAsB/P,GAClC,IAAYG,EAAyCH,EAA7CI,GAAcF,EAA+BF,EAA/BE,UAAW2P,EAAoB7P,EAApB6P,gBAEzBjL,GAASC,EAAAA,EAAAA,KAATD,KAEFxE,EAAM,W,MACFA,GAAKiH,EAAAA,EAAAA,SAEX,OAIyC,QAHrCtC,EAAQ,OAAR5E,QAAQ,IAARA,EAAAA,OAC+BqC,IAA9BqN,EAAgBrL,UACXqL,EAAgBrL,UAAUpE,GAC1ByP,EAAgB7J,YAAY5F,UAAG,IAAA2E,EAAAA,EAAA,8BAAA3B,OACPkF,EAAoB,CAC9C,KAAQuH,EAAgBtH,KACxB,SAAYnI,IAGxB,CAbY,GAeZ,YAAqCoC,IAA9BqN,EAAgBrL,UACnBzB,EAAAA,cAAC6B,EAAI5B,OAAAC,OAAA,GACG4M,EAAgBrL,UAAS,CAC7BpE,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,SAAU0M,EAAgB5L,QAChC4L,EAAgBrL,UAAUtE,UAC1BA,KAGH2P,EAAgBtH,MAGrBxF,EAAAA,cAAA,SAAAC,OAAAC,OAAA,GACQ4M,EAAgB7J,YAAW,CAC/B5F,GAAIA,EACJF,WAAWgD,EAAAA,EAAAA,IACPC,EAAG,GAAHA,GAAM,SAAU0M,EAAgB5L,QAChC4L,EAAgB7J,YAAY9F,UAC5BA,KAGH2P,EAAgBtH,KAG7B,EA1DAqI,EAVoDlN,EAArBkN,uBAUT,CAClB,KAAQ,KACR,SAAY,CACR,MAAS,U,qEClbX,SAAUnP,EAAe2E,GAC3B,IAAQyK,EAA0CzK,EAA1CyK,qBAAsBC,EAAoB1K,EAApB0K,gBAExB1Q,GAAKiH,EAAAA,EAAAA,SAEX,OAA2B,OAApBwJ,QAAoB,IAApBA,EAAAA,EAAoB,GAAAzN,OAAO0N,EAAe,KAAA1N,OAAIhD,EACzD,C,6ECTA,IAAI2Q,OAKcvO,EAEZ,SAAUiN,EAA4BrJ,GAIxC2K,EAAO3K,CACX,CAEM,SAAU4K,IACZ,OAAOD,CACX,C,8EChBM,SAAUE,EAA4C7K,GACxD,IAAQ8K,EAAmB9K,EAAnB8K,eAYR,MAAO,CAAEC,gBAVT,SAAyB/K,GACrB,IAAQ1F,EAAY0F,EAAZ1F,QAMR,MAAO,CAAE0Q,cAJYxO,EAAAA,EAAAA,IAAiB,SAACyO,GACnC,OAAOC,EAAAA,EAAAA,GAAKD,EAAUH,EAAeG,GAAkB,OAAP3Q,QAAO,IAAPA,OAAO,EAAPA,EAAU2Q,GAC9D,IAGJ,EAGJ,C,iICbM,SAAUE,EAAmBnL,GAO/B,IAAQoL,EAA0FpL,EAA1FoL,6BAA4BC,EAA8DrL,EAA5DsL,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAAiDvL,EAA/CwL,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAEE,EAAiCzL,EAAjCyL,cAAeC,EAAkB1L,EAAlB0L,cAEhFtG,GAA4BC,EAAAA,EAAAA,aAAW,kBAAM,CAAI,IAAG+F,GAA6BO,GAAAlQ,EAAAA,EAAAA,GAAA2J,EAAA,GAA1EwG,EAAOD,EAAA,GAAEE,EAAQF,EAAA,GA4DxB,OA1DAxP,EAAAA,EAAAA,YAAU,WACN,GAAKiP,EAAL,CAIA,IAAIU,GAAc,EAEZC,EAA8B,GAmCpC,OAjCAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAtB,MAAA,SAAA0B,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAaM,OAZGH,EAAiC,GAEvCd,EAAO/L,UAAU2I,SAAQ,SAAAsE,GACrB,IAAAC,GAA6BC,EAAAA,EAAAA,GAAW,CACpC,KAAQ,MACR,SAAY,UACZF,KAAAA,IAHIG,EAAQF,EAARE,SAAUC,EAAMH,EAANG,OAMlBb,EAAYtF,KAAKmG,GAEjBR,EAAc3F,KAAKkG,EACvB,IAAGN,EAAAE,KAAA,EAEGM,QAAQC,IAAIV,GAAc,WAE5BN,EAAa,CAAFO,EAAAE,KAAA,eAAAF,EAAAU,OAAA,iBAIflB,IAAW,wBAAAQ,EAAAW,OAAA,GAAAb,EAAA,IArBfH,GAwBAR,EAAQtD,SAAQ,SAAAlG,GACZ,IAAQ4K,GAAWF,EAAAA,EAAAA,GAAW,CAC1B,KAAQ,aACR1K,IAAAA,IAFI4K,OAKRb,EAAYtF,KAAKmG,EACrB,IAEO,WACHd,GAAc,EACdC,EAAY7D,SAAQ,SAAA0E,GAAM,OAAIA,GAAQ,GAC1C,C,CACJ,GAAG,IAEHK,EAAgB,CACZ,OAAU,OACV,UAAaxB,IAGjBwB,EAAgB,CACZ,OAAU,OACV,UAAavB,IAGV,CAAEE,QAAAA,EACb,CAEA,SAASqB,EAAgBjN,GACrB,IAAQkN,EAAsBlN,EAAtBkN,OAAQpT,EAAckG,EAAdlG,WAEhBqC,EAAAA,EAAAA,YAAU,WACN,QAAkBC,IAAdtC,EAAJ,CAIA,IAAMqT,EAAgB5M,SAAS6M,qBAAqBF,GAAQ,GAAGG,UAEzDC,GAASpC,EAAAA,EAAAA,GAAKpR,GAAWyT,MAAM,KAIrC,OAFAJ,EAAcK,IAAGrG,MAAjBgG,GAAazO,EAAAA,EAAAA,GAAQ4O,IAEd,WACHH,EAAcP,OAAMzF,MAApBgG,GAAazO,EAAAA,EAAAA,GAAW4O,GAC5B,C,CACJ,GAAG,CAACxT,GACR,C,kBC9FK2T,YAAYC,UAAUC,UACvBF,YAAYC,UAAUC,QAAU,SAAUC,GACtC,GAAyB,kBAAdA,EACP,MAAM,IAAIC,MAAM,yDAGpBzG,KAAK0G,aAAaF,EAAWxG,KAAK2G,WACtC,E,yFCFS7C,EAAO,SAAPA,IAIT,IAHA,IAAM8C,EAAMjH,UAAK7C,OACbzE,EAAI,EACJwO,EAAM,GACHxO,EAAIuO,EAAKvO,IAAK,CACjB,IAAMyO,EAAWzO,EAAC,GAAAsH,UAAA7C,QAADzE,OAACrD,EAAA2K,UAADtH,GACjB,GAAW,MAAPyO,EAAJ,CAEA,IAAIC,OAAK,EACT,cAAeD,GACX,IAAK,UACD,MACJ,IAAK,SACD,GAAI9O,MAAMgP,QAAQF,GACdC,EAAQjD,EAAI/D,WAAC,GAADzI,EAAAA,EAAAA,GAAIwP,SAKhB,IAAK,IAAMG,KAHXjT,EAAAA,EAAAA,KAAQsO,EAAAA,EAAAA,GAA8BwE,GAAK,IAE3CC,EAAQ,GACQD,EACRA,EAAIG,IAAgBA,IACpBF,IAAUA,GAAS,KACnBA,GAASE,GAIrB,MAEJ,QACIF,EAAQD,EAGZC,IACAF,IAAQA,GAAO,KACfA,GAAOE,EA5Bc,C,CA+B7B,OAAOF,CACX,C,6ECxCM,SAAUvB,EACZ1M,GAWA,IAAMsO,EAAc/N,SAASgO,cACxB,WACG,OAAQvO,EAAOzB,MACX,IAAK,MACD,MAAO,OACX,IAAK,aACD,MAAO,SAEnB,CAPC,IAUCiQ,EAAU,IAAIC,EAAAA,SA0CpB,OAxCAH,EAAY7G,iBAAiB,QAAQ,kBAAM+G,EAAQE,SAAS,IAE5D9R,OAAOC,OACHyR,EACC,WACG,OAAQtO,EAAOzB,MACX,IAAK,MACD,MAAO,CACH,KAAQyB,EAAOwM,KACf,KAAQ,WACR,IAAO,aACP,MAAS,gBAEjB,IAAK,aACD,MAAO,CACH,IAAOxM,EAAOgC,IACd,KAAQ,mBAGxB,CAfC,IAkBLzB,SAAS6M,qBAAqB,QAAQ,GACjC,WACG,OAAQpN,EAAOzB,MACX,IAAK,aACD,MAAO,cACX,IAAK,MACD,OAAQ,WACJ,OAAQyB,EAAO2O,UACX,IAAK,SACD,MAAO,cACX,IAAK,UACD,MAAO,UAEnB,CAPQ,GASpB,CAdC,IAeHL,GAEK,CACH,SAAYE,EAAQI,GACpB,OAAU,kBAAMN,EAAY1B,QAAQ,EAE5C,C,wFCvEAiC,EAAAA,SAAA,SAA4DlE,GACxD,OAAO/N,OAAOkS,KAAKnE,GAAM,EAC7B,C,uBCCM,SAAUjB,EAAaqF,EAAaC,GACtC,OAAOA,CACX,C","sources":["../node_modules/@codegouvfr/react-dsfr/src/Alert.tsx","../node_modules/@codegouvfr/react-dsfr/src/Button.tsx","../node_modules/@codegouvfr/react-dsfr/dsfr/artwork/light.svg","../node_modules/@codegouvfr/react-dsfr/dsfr/artwork/dark.svg","../node_modules/@codegouvfr/react-dsfr/dsfr/artwork/system.svg","../node_modules/@codegouvfr/react-dsfr/src/Modal/Modal.tsx","../node_modules/@codegouvfr/react-dsfr/src/Display/Display.tsx","../node_modules/@codegouvfr/react-dsfr/src/tools/getAssetUrl.ts","../node_modules/@codegouvfr/react-dsfr/src/tools/generateValidHtmlId.ts","../node_modules/@codegouvfr/react-dsfr/src/MainNavigation/Menu.tsx","../node_modules/@codegouvfr/react-dsfr/src/MainNavigation/MegaMenu.tsx","../node_modules/@codegouvfr/react-dsfr/src/MainNavigation/MainNavigation.tsx","../node_modules/@codegouvfr/react-dsfr/src/MainNavigation/index.ts","../node_modules/@codegouvfr/react-dsfr/src/SearchBar/SearchBar.tsx","../node_modules/@codegouvfr/react-dsfr/src/SearchBar/SearchButton.tsx","../node_modules/@codegouvfr/react-dsfr/src/tools/observeInputValue.ts","../node_modules/@codegouvfr/react-dsfr/src/Header/Header.tsx","../node_modules/@codegouvfr/react-dsfr/src/tools/useAnalyticsId.ts","../node_modules/@codegouvfr/react-dsfr/src/zz_internal/brandTopAndHomeLinkProps.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/usePrepareTemplate.ts","../node_modules/keycloakify/src/tools/HTMLElement.prototype.prepend.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/keycloakify/src/tools/headInsert.ts","../node_modules/tsafe/src/symToStr.ts","../node_modules/keycloakify/node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["\"use client\";\n\nimport React, {\n    memo,\n    forwardRef,\n    useState,\n    useEffect,\n    useRef,\n    type ReactNode,\n    type CSSProperties\n} from \"react\";\nimport type { FrClassName } from \"./fr/generatedFromCss/classNames\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { fr } from \"./fr\";\nimport { cx } from \"./tools/cx\";\nimport { assert } from \"tsafe/assert\";\nimport type { Equals } from \"tsafe\";\nimport { useConstCallback } from \"./tools/powerhooks/useConstCallback\";\nimport { createComponentI18nApi } from \"./i18n\";\nimport { useAnalyticsId } from \"./tools/useAnalyticsId\";\n\nexport type AlertProps = {\n    className?: string;\n    id?: string;\n    severity: AlertProps.Severity;\n    /** Default h3 */\n    as?: `h${2 | 3 | 4 | 5 | 6}`;\n    classes?: Partial<Record<\"root\" | \"title\" | \"description\" | \"close\", string>>;\n    style?: CSSProperties;\n} & (AlertProps.DefaultSize | AlertProps.Small) &\n    (AlertProps.NonClosable | AlertProps.Closable);\n\nexport namespace AlertProps {\n    export type DefaultSize = {\n        /** Default false */\n        small?: false;\n        title: NonNullable<ReactNode>;\n        description?: NonNullable<ReactNode>;\n    };\n\n    export type Small = {\n        /** Default false */\n        small: true;\n        title?: NonNullable<ReactNode>;\n        description: NonNullable<ReactNode>;\n    };\n\n    export type NonClosable = {\n        /** Default false */\n        closable?: false;\n        isClosed?: never;\n        onClose?: never;\n    };\n\n    export type Closable = {\n        /** Default false */\n        closable: true;\n    } & (Closable.Controlled | Closable.Uncontrolled);\n\n    export namespace Closable {\n        export type Controlled = {\n            isClosed: boolean;\n            onClose: () => void;\n        };\n\n        export type Uncontrolled = {\n            isClosed?: never;\n            onClose?: () => void;\n        };\n    }\n\n    type ExtractSeverity<FrClassName> = FrClassName extends `fr-alert--${infer Severity}`\n        ? Exclude<Severity, \"sm\">\n        : never;\n\n    export type Severity = ExtractSeverity<FrClassName>;\n}\n\n/** @see <https://components.react-dsfr.codegouv.studio/?path=/docs/components-alert> */\nexport const Alert = memo(\n    forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n        const {\n            className,\n            id: id_props,\n            severity,\n            as: HtmlTitleTag = \"h3\",\n            classes = {},\n            style,\n            small: isSmall,\n            title,\n            description,\n            closable: isClosable = false,\n            isClosed: props_isClosed,\n            onClose,\n            ...rest\n        } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const id = useAnalyticsId({\n            \"explicitlyProvidedId\": id_props,\n            \"defaultIdPrefix\": \"fr-alert\"\n        });\n\n        const [isClosed, setIsClosed] = useState(props_isClosed ?? false);\n\n        const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null);\n\n        const refShouldButtonGetFocus = useRef(false);\n        const refShouldSetRole = useRef(false);\n        const DescriptionTag = typeof description === \"string\" ? \"p\" : \"div\";\n\n        useEffect(() => {\n            if (props_isClosed === undefined) {\n                return;\n            }\n            setIsClosed(isClosed => {\n                if (isClosed && !props_isClosed) {\n                    refShouldButtonGetFocus.current = true;\n                    refShouldSetRole.current = true;\n                }\n\n                return props_isClosed;\n            });\n        }, [props_isClosed]);\n\n        useEffect(() => {\n            if (!refShouldButtonGetFocus.current) {\n                return;\n            }\n\n            if (buttonElement === null) {\n                //NOTE: This should not be reachable\n                return;\n            }\n\n            refShouldButtonGetFocus.current = false;\n            buttonElement.focus();\n        }, [buttonElement]);\n\n        const onCloseButtonClick = useConstCallback(() => {\n            if (props_isClosed === undefined) {\n                //Uncontrolled\n                setIsClosed(true);\n                onClose?.();\n            } else {\n                //Controlled\n                onClose();\n            }\n        });\n\n        const { t } = useTranslation();\n\n        if (isClosed) {\n            return null;\n        }\n\n        return (\n            <div\n                id={id}\n                className={cx(\n                    fr.cx(\"fr-alert\", `fr-alert--${severity}`, { \"fr-alert--sm\": isSmall }),\n                    classes.root,\n                    className\n                )}\n                style={style}\n                {...(refShouldSetRole.current && { \"role\": \"alert\" })}\n                ref={ref}\n                {...rest}\n            >\n                {title !== undefined && (\n                    <HtmlTitleTag className={cx(fr.cx(\"fr-alert__title\"), classes.title)}>\n                        {title}\n                    </HtmlTitleTag>\n                )}\n                <DescriptionTag className={classes.description}>{description}</DescriptionTag>\n                {isClosable && (\n                    <button\n                        ref={setButtonElement}\n                        className={cx(fr.cx(\"fr-link--close\", \"fr-link\"), classes.close)}\n                        onClick={onCloseButtonClick}\n                    >\n                        {t(\"hide message\")}\n                    </button>\n                )}\n            </div>\n        );\n    })\n);\n\nAlert.displayName = symToStr({ Alert });\n\nexport default Alert;\n\nconst { useTranslation, addAlertTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ Alert }),\n    \"frMessages\": {\n        /* spell-checker: disable */\n        \"hide message\": \"Masquer le message\"\n        /* spell-checker: enable */\n    }\n});\n\naddAlertTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"hide message\": \"Hide the message\"\n    }\n});\n\naddAlertTranslations({\n    \"lang\": \"es\",\n    \"messages\": {\n        /* spell-checker: disable */\n        \"hide message\": \"Occultar el mesage\"\n        /* spell-checker: enable */\n    }\n});\n\nexport { addAlertTranslations };\n","import React, {\n    memo,\n    forwardRef,\n    type ReactNode,\n    type RefAttributes,\n    type MemoExoticComponent,\n    type ForwardRefExoticComponent,\n    type CSSProperties,\n    type ComponentProps\n} from \"react\";\nimport { fr } from \"./fr\";\nimport { cx } from \"./tools/cx\";\nimport type { FrIconClassName, RiIconClassName } from \"./fr/generatedFromCss/classNames\";\nimport { getLink } from \"./link\";\nimport type { RegisteredLinkProps } from \"./link\";\nimport { assert } from \"tsafe/assert\";\nimport type { Equals } from \"tsafe\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { useAnalyticsId } from \"./tools/useAnalyticsId\";\n\nexport type ButtonProps = ButtonProps.Common &\n    (ButtonProps.IconOnly | ButtonProps.WithIcon | ButtonProps.WithoutIcon) &\n    (ButtonProps.AsAnchor | ButtonProps.AsButton);\nexport namespace ButtonProps {\n    export type Common = {\n        id?: string;\n        className?: string;\n        /** Default primary */\n        priority?: \"primary\" | \"secondary\" | \"tertiary\" | \"tertiary no outline\";\n        /** Default medium */\n        size?: \"small\" | \"medium\" | \"large\";\n        style?: CSSProperties;\n    };\n\n    export type IconOnly = {\n        children?: never;\n        /** Function of the button */\n        title: string;\n        iconId: FrIconClassName | RiIconClassName;\n        iconPosition?: never;\n    };\n\n    export type WithIcon = {\n        children: ReactNode;\n        /** Function of the button, to provide if the label isn't explicit */\n        title?: string;\n        iconId: FrIconClassName | RiIconClassName;\n        /** Default left */\n        iconPosition?: \"left\" | \"right\";\n    };\n\n    export type WithoutIcon = {\n        children: ReactNode;\n        /** Function of the button, to provide if the label isn't explicit */\n        title?: string;\n        iconId?: never;\n        iconPosition?: never;\n    };\n\n    export type AsAnchor = {\n        linkProps: RegisteredLinkProps;\n        onClick?: never;\n        nativeButtonProps?: never;\n        disabled?: never;\n        type?: never;\n    };\n    export type AsButton = {\n        linkProps?: never;\n        onClick?: React.MouseEventHandler<HTMLButtonElement>;\n        nativeButtonProps?: ComponentProps<\"button\"> &\n            Record<`data-${string}`, string | boolean | null | undefined>;\n        disabled?: boolean;\n        /** Default \"button\" */\n        type?: \"button\" | \"submit\" | \"reset\";\n    };\n}\n\n/** @see <https://components.react-dsfr.codegouv.studio/?path=/docs/components-button> */\nexport const Button = memo(\n    forwardRef<HTMLButtonElement | HTMLAnchorElement, ButtonProps>((props, ref) => {\n        const {\n            id: props_id,\n            className: prop_className,\n            children,\n            title,\n            iconId,\n            iconPosition = \"left\",\n            priority = \"primary\",\n            size = \"medium\",\n            linkProps,\n            onClick,\n            nativeButtonProps,\n            disabled,\n            type,\n            style,\n            ...rest\n        } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const id = useAnalyticsId({\n            \"defaultIdPrefix\": \"fr-button\",\n            \"explicitlyProvidedId\": props_id\n        });\n\n        const { Link } = getLink();\n\n        const className = cx(\n            fr.cx(\n                \"fr-btn\",\n                priority !== \"primary\" &&\n                    `fr-btn--${\n                        priority === \"tertiary no outline\" ? \"tertiary-no-outline\" : priority\n                    }`,\n                size !== \"medium\" &&\n                    `fr-btn--${(() => {\n                        switch (size) {\n                            case \"small\":\n                                return \"sm\";\n                            case \"large\":\n                                return \"lg\";\n                        }\n                    })()}`,\n                ...(iconId === undefined\n                    ? []\n                    : [iconId, children !== undefined && (`fr-btn--icon-${iconPosition}` as const)])\n            ),\n            linkProps !== undefined && linkProps.className,\n            prop_className\n        );\n\n        return linkProps !== undefined ? (\n            <Link\n                {...linkProps}\n                id={props_id ?? linkProps.id ?? id}\n                title={title ?? linkProps.title}\n                className={cx(linkProps?.className, className)}\n                style={{\n                    ...linkProps?.style,\n                    ...style\n                }}\n                ref={ref as React.ForwardedRef<HTMLAnchorElement>}\n                {...rest}\n            >\n                {children}\n            </Link>\n        ) : (\n            <button\n                {...nativeButtonProps}\n                id={props_id ?? nativeButtonProps?.id ?? id}\n                className={cx(nativeButtonProps?.className, className)}\n                style={{\n                    ...nativeButtonProps?.style,\n                    ...style\n                }}\n                type={type ?? nativeButtonProps?.type}\n                title={title ?? nativeButtonProps?.title}\n                onClick={onClick ?? nativeButtonProps?.onClick}\n                disabled={disabled ?? nativeButtonProps?.disabled}\n                ref={ref as React.ForwardedRef<HTMLButtonElement>}\n                {...rest}\n            >\n                {children}\n            </button>\n        );\n    })\n) as MemoExoticComponent<\n    ForwardRefExoticComponent<\n        ButtonProps.Common &\n            (ButtonProps.IconOnly | ButtonProps.WithIcon | ButtonProps.WithoutIcon) &\n            (\n                | (ButtonProps.AsAnchor & RefAttributes<HTMLAnchorElement>)\n                | (ButtonProps.AsButton & RefAttributes<HTMLButtonElement>)\n            )\n    >\n>;\n\nButton.displayName = symToStr({ Button });\n\nexport default Button;\n","var _g, _g2, _g3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"80px\",\n    height: \"80px\",\n    viewBox: \"0 0 80 80\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-decorative\",\n    id: \"artwork-decorative\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,70 C19.5514001,70 20,70.4485529 20,71 C20,71.5514001 19.5514001,72 19,72 C18.4485999,72 18,71.5514001 18,71 C18,70.4485529 18.4485999,70 19,70 Z M67,64 C67.5514001,64 68,64.4485529 68,65 C68,65.5514001 67.5514001,66 67,66 C66.4485999,66 66,65.5514001 66,65 C66,64.4485529 66.4485999,64 67,64 Z M9,30 C9.55140011,30 10,30.4485529 10,31 C10,31.5514001 9.55140011,32 9,32 C8.44859989,32 8,31.5514001 8,31 C8,30.4485529 8.44859989,30 9,30 Z M67,14 C67.5514001,14 68,14.4485529 68,15 C68,15.5514001 67.5514001,16 67,16 C66.4485999,16 66,15.5514001 66,15 C66,14.4485529 66.4485999,14 67,14 Z M31,8 C31.5514001,8 32,8.4485529 32,9 C32,9.55140011 31.5514001,10 31,10 C30.4485999,10 30,9.55140011 30,9 C30,8.4485529 30.4485999,8 31,8 Z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-minor\",\n    id: \"artwork-minor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.4452998,44.1679497 C32.9048285,43.8615972 33.5256978,43.9857711 33.8320503,44.4452998 C35.3155962,46.6706186 38.5061115,48 41,48 C41.5522847,48 42,48.4477153 42,49 C42,49.5522847 41.5522847,50 41,50 C37.8938885,50 34.0690192,48.4063045 32.1679497,45.5547002 C31.8615972,45.0951715 31.9857711,44.4743022 32.4452998,44.1679497 Z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-major\",\n    id: \"artwork-major\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40,59.0701754 C40.5128358,59.0701754 40.9355072,59.4562156 40.9932723,59.9535543 L41,60.0701754 L41,65.5438596 C41,66.0961444 40.5522847,66.5438596 40,66.5438596 C39.4871642,66.5438596 39.0644928,66.1578195 39.0067277,65.6604808 L39,65.5438596 L39,60.0701754 C39,59.5178907 39.4477153,59.0701754 40,59.0701754 Z M25.4595522,53.8832627 C25.8231571,54.2405985 25.8558178,54.807567 25.5542156,55.2024956 L25.4718493,55.2974228 L23.6787458,57.1219842 C23.291632,57.5158894 22.658491,57.521395 22.2645857,57.1342812 C21.9009809,56.7769454 21.8683201,56.2099769 22.1699224,55.8150482 L22.2522887,55.7201211 L24.0453921,53.8955597 C24.4325059,53.5016544 25.065647,53.4961489 25.4595522,53.8832627 Z M55.8611275,53.8115551 L55.9546079,53.8955597 L57.7477113,55.7201211 C58.1348251,56.1140264 58.1293195,56.7471674 57.7354143,57.1342812 C57.3718094,57.491617 56.8043587,57.5144132 56.4147346,57.2059888 L56.3212542,57.1219842 L54.5281507,55.2974228 C54.1410369,54.9035175 54.1465425,54.2703764 54.5404478,53.8832627 C54.9040526,53.5259268 55.4715034,53.5031306 55.8611275,53.8115551 Z M40,26 C47.7319865,26 54,32.2680135 54,40 C54,47.7319865 47.7319865,54 40,54 C35.8606631,54 32.0127918,52.1918046 29.3698654,49.1108073 C29.0102809,48.6916207 29.0585978,48.060302 29.4777843,47.7007174 C29.8969709,47.3411328 30.5282896,47.3894497 30.8878742,47.8086363 C33.1547633,50.4512673 36.4504935,52 40,52 C46.627417,52 52,46.627417 52,40 C52,33.372583 46.627417,28 40,28 C33.372583,28 28,33.372583 28,40 C28,41.6435761 28.3300294,43.2391661 28.9619532,44.7161069 C29.1792036,45.2238673 28.9436987,45.8116048 28.4359382,46.0288552 C27.9281777,46.2461056 27.3404402,46.0106006 27.1231899,45.5028401 C26.3853625,43.7783803 26,41.9152719 26,40 C26,32.2680135 32.2680135,26 40,26 Z M19.3793103,39 C19.9315951,39 20.3793103,39.4477153 20.3793103,40 C20.3793103,40.5128358 19.9932702,40.9355072 19.4959315,40.9932723 L19.3793103,41 L14,41 C13.4477153,41 13,40.5522847 13,40 C13,39.4871642 13.3860402,39.0644928 13.8833789,39.0067277 L14,39 L19.3793103,39 Z M66,39 C66.5522847,39 67,39.4477153 67,40 C67,40.5128358 66.6139598,40.9355072 66.1166211,40.9932723 L66,41 L60.6206897,41 C60.0684049,41 59.6206897,40.5522847 59.6206897,40 C59.6206897,39.4871642 60.0067298,39.0644928 60.5040685,39.0067277 L60.6206897,39 L66,39 Z M57.7354143,21.0411574 C58.0990191,21.3984932 58.1316799,21.9654617 57.8300776,22.3603904 L57.7477113,22.4553175 L55.9546079,24.2798789 C55.5674941,24.6737842 54.934353,24.6792897 54.5404478,24.2921759 C54.1768429,23.9348401 54.1441822,23.3678716 54.4457844,22.972943 L54.5281507,22.8780158 L56.3212542,21.0534544 C56.708368,20.6595492 57.341509,20.6540436 57.7354143,21.0411574 Z M23.5852654,20.9694498 L23.6787458,21.0534544 L25.4718493,22.8780158 C25.8589631,23.2719211 25.8534575,23.9050621 25.4595522,24.2921759 C25.0959474,24.6495117 24.5284966,24.672308 24.1388725,24.3638835 L24.0453921,24.2798789 L22.2522887,22.4553175 C21.8651749,22.0614122 21.8706805,21.4282712 22.2645857,21.0411574 C22.6281906,20.6838216 23.1956413,20.6610254 23.5852654,20.9694498 Z M40,13.4561404 C40.5128358,13.4561404 40.9355072,13.8421805 40.9932723,14.3395192 L41,14.4561404 L41,19.9298246 C41,20.4821093 40.5522847,20.9298246 40,20.9298246 C39.4871642,20.9298246 39.0644928,20.5437844 39.0067277,20.0464457 L39,19.9298246 L39,14.4561404 C39,13.9038556 39.4477153,13.4561404 40,13.4561404 Z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLight);\nexport default __webpack_public_path__ + \"static/media/light.e5cbad67efbd4ce6ad7880b91d22f410.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _g2, _g3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDark(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"80px\",\n    height: \"80px\",\n    viewBox: \"0 0 80 80\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-decorative\",\n    id: \"artwork-decorative\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,70 C19.5514001,70 20,70.4485529 20,71 C20,71.5514001 19.5514001,72 19,72 C18.4485999,72 18,71.5514001 18,71 C18,70.4485529 18.4485999,70 19,70 Z M45,68 C45.5514001,68 46,68.4485529 46,69 C46,69.5514001 45.5514001,70 45,70 C44.4485999,70 44,69.5514001 44,69 C44,68.4485529 44.4485999,68 45,68 Z M69,58 C69.5514001,58 70,58.4485529 70,59 C70,59.5514001 69.5514001,60 69,60 C68.4485999,60 68,59.5514001 68,59 C68,58.4485529 68.4485999,58 69,58 Z M9,30 C9.55140011,30 10,30.4485529 10,31 C10,31.5514001 9.55140011,32 9,32 C8.44859989,32 8,31.5514001 8,31 C8,30.4485529 8.44859989,30 9,30 Z M67,14 C67.5514001,14 68,14.4485529 68,15 C68,15.5514001 67.5514001,16 67,16 C66.4485999,16 66,15.5514001 66,15 C66,14.4485529 66.4485999,14 67,14 Z M31,8 C31.5514001,8 32,8.4485529 32,9 C32,9.55140011 31.5514001,10 31,10 C30.4485999,10 30,9.55140011 30,9 C30,8.4485529 30.4485999,8 31,8 Z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-minor\",\n    id: \"artwork-minor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59,38 C59.5522847,38 60,38.4477153 60,39 C60,39.5522847 59.5522847,40 59,40 C58.4477153,40 58,39.5522847 58,39 C58,38.4477153 58.4477153,38 59,38 Z M55,38 C55.5522847,38 56,38.4477153 56,39 C56,39.5128358 55.6139598,39.9355072 55.1166211,39.9932723 L55,40 L53,40 C52.4477153,40 52,39.5522847 52,39 C52,38.4871642 52.3860402,38.0644928 52.8833789,38.0067277 L53,38 L55,38 Z M41,30 C41.5522847,30 42,30.4477153 42,31 C42,31.5522847 41.5522847,32 41,32 C40.4477153,32 40,31.5522847 40,31 C40,30.4477153 40.4477153,30 41,30 Z M47,30 C47.5522847,30 48,30.4477153 48,31 C48,31.5128358 47.6139598,31.9355072 47.1166211,31.9932723 L47,32 L45,32 C44.4477153,32 44,31.5522847 44,31 C44,30.4871642 44.3860402,30.0644928 44.8833789,30.0067277 L45,30 L47,30 Z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-major\",\n    id: \"artwork-major\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.2372046,27.219668 C35.9287679,29.6306981 34.6451028,32.8137279 34.6451028,36.1754963 C34.6451028,42.9433804 39.8491934,48.5549224 46.5377725,49.0698127 C47.0884281,49.1122025 47.5004589,49.5929607 47.4580692,50.1436162 C47.4156794,50.6942718 46.9349212,51.1063027 46.3842656,51.0639129 C38.6544001,50.4688638 32.6451028,43.9890718 32.6451028,36.1754963 C32.6451028,32.5647259 33.9309214,29.1273377 36.2583393,26.4247704 L36.485,26.168 L36.2853946,26.246427 C30.2201878,28.6888561 26.1468998,34.5562129 26.0058442,41.1803491 L26.0020604,41.5359223 C26.0020604,50.632592 33.3357964,58.0023031 42.377191,58.0023031 C49.302969,58.0023031 55.4411264,53.6273402 57.7741783,47.1561411 L57.843,46.957 L57.6461851,47.1450666 C55.6786946,48.9687981 53.2687839,50.2236917 50.6517155,50.7813965 L50.2576309,50.8598073 C49.7145533,50.9602321 49.1928915,50.6013911 49.0924667,50.0583135 C48.9920418,49.5152359 49.3508828,48.9935741 49.8939604,48.8931493 C52.517347,48.4080378 54.9171408,47.1180514 56.7867943,45.1890584 C58.1779163,43.7537846 60.4974599,45.2037767 59.9066883,47.0889823 C57.5043091,54.7551905 50.4148511,60.0023031 42.377191,60.0023031 C32.2290301,60.0023031 24.0020604,51.7349766 24.0020604,41.5359223 C24.0020604,33.6813328 28.9399882,26.7067481 36.2759472,24.1124031 C38.1551185,23.4478386 39.5993561,25.7969787 38.2372046,27.219668 Z M15,58 C15.5522847,58 16,58.4477153 16,59 C16,59.5522847 15.5522847,60 15,60 C14.4477153,60 14,59.5522847 14,59 C14,58.4477153 14.4477153,58 15,58 Z M23,58 C23.5522847,58 24,58.4477153 24,59 C24,59.5128358 23.6139598,59.9355072 23.1166211,59.9932723 L23,60 L19,60 C18.4477153,60 18,59.5522847 18,59 C18,58.4871642 18.3860402,58.0644928 18.8833789,58.0067277 L19,58 L23,58 Z M57,26 C57.5522847,26 58,26.4477153 58,27 C58,27.5128358 57.6139598,27.9355072 57.1166211,27.9932723 L57,28 L55,28 C54.4477153,28 54,27.5522847 54,27 C54,26.4871642 54.3860402,26.0644928 54.8833789,26.0067277 L55,26 L57,26 Z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDark);\nexport default __webpack_public_path__ + \"static/media/dark.162ea7b2003c9e9dd75efa469e80ee0e.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _g2, _g3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSystem(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"80px\",\n    height: \"80px\",\n    viewBox: \"0 0 80 80\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-major\",\n    id: \"artwork-decorative\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,70 C19.5514001,70 20,70.4485529 20,71 C20,71.5514001 19.5514001,72 19,72 C18.4485999,72 18,71.5514001 18,71 C18,70.4485529 18.4485999,70 19,70 Z M67,64 C67.5514001,64 68,64.4485529 68,65 C68,65.5514001 67.5514001,66 67,66 C66.4485999,66 66,65.5514001 66,65 C66,64.4485529 66.4485999,64 67,64 Z M9,30 C9.55140011,30 10,30.4485529 10,31 C10,31.5514001 9.55140011,32 9,32 C8.44859989,32 8,31.5514001 8,31 C8,30.4485529 8.44859989,30 9,30 Z M67,14 C67.5514001,14 68,14.4485529 68,15 C68,15.5514001 67.5514001,16 67,16 C66.4485999,16 66,15.5514001 66,15 C66,14.4485529 66.4485999,14 67,14 Z M31,8 C31.5514001,8 32,8.4485529 32,9 C32,9.55140011 31.5514001,10 31,10 C30.4485999,10 30,9.55140011 30,9 C30,8.4485529 30.4485999,8 31,8 Z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-minor\",\n    id: \"artwork-minor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.3022726,46.2179257 C55.3885453,46.936287 56.5004356,49.216 55.7820743,51.3022726 C55.0636806,53.3886394 52.7840392,54.5004491 50.6977274,53.7820743 C50.1755319,53.602268 49.8979706,53.0331831 50.077777,52.5109876 C50.2575833,51.9887921 50.8266682,51.7112308 51.3488637,51.8910372 C52.3907982,52.249804 53.5322608,51.6930984 53.8910372,50.6511363 C54.2497858,49.6092547 53.693018,48.4677115 52.6511363,48.1089628 C51.6566129,47.766521 50.5712822,48.2582583 50.1626523,49.2098362 L50.1089628,49.3488637 C49.9291565,49.8710592 49.3600716,50.1486204 48.8378761,49.9688141 C48.3156806,49.7890078 48.0381194,49.2199229 48.2179257,48.6977274 C48.936287,46.6114547 51.216,45.4995644 53.3022726,46.2179257 Z M38.5,28.669873 C38.9782926,28.9460154 39.1421678,29.5576058 38.8660254,30.0358984 C38.589883,30.514191 37.9782926,30.6780662 37.5,30.4019238 C36.0681241,29.5752299 34.2286395,30.0680863 33.4019238,31.5 C32.5752659,32.9318134 33.0681866,34.7714184 34.5,35.5980762 C35.8806772,36.3952106 37.6405381,35.9653389 38.5056944,34.6497985 L38.5980762,34.5 C38.8742186,34.0217074 39.485809,33.8578322 39.9641016,34.1339746 C40.4423942,34.410117 40.6062694,35.0217074 40.330127,35.5 C38.9511844,37.8883986 35.8883986,38.7090696 33.5,37.330127 C31.1116014,35.9511844 30.2909304,32.8883986 31.669873,30.5 C33.0488807,28.1114885 36.1115515,27.2909016 38.5,28.669873 Z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    className: \"fr-artwork-major\",\n    id: \"artwork-major\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.5269163,36 L53.5540023,36.0032389 L53.7118701,36.0192783 C54.3753311,36.1274837 54.8790978,36.6703501 54.9433179,37.3329606 L54.9502497,37.4766667 L54.9497575,38.2556283 L54.9532792,38.3854402 C54.9875177,38.9145788 55.3096144,39.382001 55.8267415,39.6222821 L56.3589595,39.844704 L56.5621006,39.9350857 C57.0656241,40.1674193 57.6606238,40.0869 58.0907067,39.7364583 L58.2037206,39.6342233 L58.8471015,38.997722 L58.9852821,38.8885185 C59.5267013,38.5169979 60.2481195,38.5499976 60.7557927,38.9616 L60.8689745,39.0632942 L63.0104308,41.2110039 L63.1194248,41.3491972 C63.4896568,41.8900627 63.4559877,42.6107511 63.0451874,43.1176458 L62.9437048,43.2306472 L62.3901112,43.7843068 L62.2968996,43.8824937 C61.9210294,44.3112114 61.83203,44.9307116 62.0794292,45.4630067 C62.1416541,45.5999195 62.2025296,45.7417574 62.2585933,45.8800043 L62.3850421,46.1999382 C62.592844,46.6683149 63.0518718,46.9931671 63.5729012,47.0432494 L63.7163952,47.0499972 L64.6040023,47.0532389 L64.7618701,47.0692783 C65.4253311,47.1774837 65.9290978,47.7203501 65.9933179,48.3829606 L66.0002497,48.5266667 L65.9970108,51.5537526 L65.9809713,51.7116204 C65.872766,52.3750815 65.3298996,52.8788481 64.667289,52.9430683 L64.523583,52.95 L63.7365451,52.9497286 L63.6094235,52.9521258 C63.0904558,52.9816915 62.6219675,53.3001544 62.3862368,53.7926193 L62.3278544,53.9311556 L62.2508328,54.1252243 C62.1934649,54.2657259 62.131514,54.4093807 62.0639497,54.5578426 C61.8311982,55.0584646 61.9124725,55.6552321 62.2664354,56.0870197 L62.3697005,56.2004934 L63.0025276,56.8402218 L63.1117312,56.9784024 C63.4832518,57.5198216 63.4502521,58.2412399 63.0395501,58.7480111 L62.9380802,58.8609684 L60.7865874,61.0127194 L60.648353,61.121455 C60.1082614,61.489879 59.3884174,61.4549792 58.8824007,61.0447687 L58.7696025,60.9434552 L58.2173234,60.3911577 L58.1186946,60.2978947 C57.6881955,59.9217242 57.0705235,59.8326208 56.5405632,60.0776413 C56.4018439,60.1407088 56.2593996,60.2018853 56.1207711,60.2581239 L55.8003115,60.3847924 C55.3319348,60.5925943 55.0070825,61.0516221 54.9570002,61.5726515 L54.9502525,61.7161455 L54.9470108,62.6037526 L54.9309713,62.7616204 C54.822766,63.4250815 54.2798996,63.9288481 53.617289,63.9930683 L53.473583,64 L50.446497,63.9967611 L50.2886292,63.9807217 C49.6251682,63.8725163 49.1214016,63.3296499 49.0571814,62.6670394 L49.0502497,62.5233333 L49.0506864,61.7425515 L49.0474287,61.6136831 C49.0143929,61.0881812 48.6948222,60.6214355 48.1850394,60.3812533 L47.6456538,60.1554598 L47.4550671,60.0707939 C46.9503443,59.8465767 46.7229496,59.2556541 46.9471668,58.7509313 C47.1553685,58.2822601 47.67976,58.0527137 48.1577202,58.2018334 L48.2670294,58.243031 L48.4380512,58.3192539 L48.7675653,58.4586647 C49.9988471,58.9035022 50.8670988,60.0026782 51.025895,61.3128347 L51.0450218,61.5213902 L51.0502497,61.713 L51.0510482,62 L52.9510482,62 L52.9502542,61.7179547 C52.947898,60.4181183 53.6746528,59.2298089 54.8335881,58.6328238 L55.0201261,58.543547 L55.4518576,58.3706599 L55.7070001,58.2596392 C56.8828827,57.7159348 58.256889,57.8766006 59.2913304,58.6760659 L59.4605009,58.8152136 L59.6077976,58.9539483 L59.8160482,59.161 L61.1560482,57.816 L60.9581805,57.6173861 C59.9734634,56.6414238 59.6690044,55.1748408 60.1662772,53.9103085 L60.2468962,53.7222306 L60.3247381,53.5466329 L60.3954684,53.3785509 L60.4592624,53.2186543 C60.9107173,51.9857289 62.019827,51.1188074 63.3310999,50.9707838 L63.5292501,50.9540161 L63.7132497,50.95 L64.0010482,50.95 L64.0010482,49.05 L63.7182043,49.0499955 C62.418368,49.0523517 61.2300585,48.3255968 60.6330735,47.1666616 L60.5437967,46.9801236 L60.4072555,46.6368285 L60.2622302,46.2982998 C59.7148042,45.1206701 59.8751609,43.7419394 60.6770336,42.7072309 L60.8166076,42.5380583 L60.954198,42.392452 L61.1620482,42.185 L59.8220482,40.845 L59.6185319,41.0478372 C58.6430973,42.0261823 57.1834106,42.3280047 55.9243169,41.8365952 L55.7370429,41.7569199 L55.565375,41.680409 L55.2502523,41.5462205 C54.0092431,41.1052888 53.1330729,40.0008246 52.9742566,38.6809273 L52.9558583,38.4813829 L52.9502497,38.287 L52.9510482,38 L51.0510482,38 L51.0502452,38.2820453 C51.0526014,39.5818817 50.3258465,40.7701911 49.1669112,41.3671762 L48.9803732,41.456453 L48.8147473,41.5231668 C48.6358223,41.591382 48.4578067,41.6656823 48.2876871,41.7430257 C47.7849237,41.9716028 47.1920552,41.749331 46.9634781,41.2465677 C46.734901,40.7438043 46.9571729,40.1509358 47.4599362,39.9223587 C47.5986554,39.8592912 47.7410997,39.7981147 47.8797282,39.7418761 L48.2001879,39.6152076 C48.6685646,39.4074057 48.9934168,38.9483779 49.0434991,38.4273485 L49.0502468,38.2838545 L49.0534885,37.3962474 L49.069528,37.2383796 C49.1777334,36.5749185 49.7205998,36.0711519 50.3832103,36.0069317 L50.5269163,36 Z M33.8581608,16 L37.7371625,16.0032584 L37.9176113,16.0211833 C38.6463562,16.1403961 39.1981521,16.7397383 39.26428,17.46885 L39.2709385,17.6162988 L39.2704493,18.6327298 L39.2754594,18.8103929 C39.3274609,19.6164841 39.8237342,20.3256808 40.5968816,20.6700753 L40.7667329,20.7381928 L41.2594907,20.9461661 L41.5176435,21.0613421 C42.2806266,21.4144609 43.1828145,21.2837852 43.8237609,20.7375933 L43.9569621,20.6142171 L44.7664431,19.8093926 L44.923613,19.6840677 C45.5190799,19.2742218 46.3147462,19.3130205 46.870756,19.7712979 L46.9860725,19.8759102 L49.728071,22.6324778 L49.8525671,22.7898567 C50.2581512,23.3841625 50.2189677,24.1774175 49.7641453,24.7325824 L49.6603322,24.8477428 L48.9406848,25.5698476 L48.8136739,25.7043714 C48.252714,26.3461408 48.1200453,27.2724083 48.4870326,28.0643545 C48.5655546,28.2376489 48.6424175,28.4172825 48.7137876,28.5938545 L48.8798937,29.0147398 C49.1963649,29.7302133 49.8981601,30.2197092 50.6890543,30.2805263 L50.8597874,30.2869233 L51.9809387,30.2901854 L52.0806084,30.2982512 C52.6310936,30.3427992 53.0412367,30.825169 52.9966887,31.3756541 C52.9553226,31.8868189 52.5364471,32.2769745 52.0360695,32.2944353 L51.9192857,32.2917343 L51.9002738,32.286927 L50.8616021,32.2869217 C49.2832256,32.2897914 47.8416367,31.3988119 47.1302302,29.9884359 L47.0378019,29.7929277 L46.9539291,29.5842089 C46.8940128,29.4265752 46.8304323,29.2691851 46.7659444,29.1182791 L46.6688769,28.8975632 C46.0047812,27.4646243 46.2057961,25.785289 47.1860352,24.5374225 L47.331361,24.3621643 L47.5026703,24.180164 L47.9779471,23.704 L45.8399471,21.56 L45.3739098,22.0256896 C44.1904786,23.2162477 42.4149967,23.5785501 40.8881838,22.9674739 L40.6905136,22.8822362 L40.4638827,22.7809945 L40.0425463,22.6016159 C38.5401476,22.0661952 37.4819362,20.7223234 37.29769,19.1253346 L37.278023,18.9060467 L37.2709385,18.6640068 L37.2709471,18 L34.2439471,18 L34.243718,18.6581372 C34.2465746,20.2387516 33.3590502,21.6834123 31.9523231,22.3971641 L31.7573133,22.4899076 L31.5491027,22.5740826 C31.391621,22.6343043 31.2346867,22.6981017 31.0826953,22.7635157 L30.8589647,22.8626042 C29.4299128,23.5253707 27.7580036,23.3229805 26.5123648,22.3413977 L26.3373884,22.1958802 L26.154146,22.0229364 L25.6859471,21.554 L23.5459471,23.7 L24.0079068,24.1646821 C25.2013888,25.3511366 25.5650836,27.1368813 24.9534569,28.6637684 L24.8681364,28.8613891 L24.7674036,29.0882717 L24.5823568,29.528057 C24.0428198,31.0259851 22.7033494,32.0798703 21.1154822,32.2610379 L20.897467,32.280293 L20.6589281,32.286927 L19.9999471,32.287 L19.9999471,35.33 L20.6530598,35.3293772 C22.2314362,35.3265074 23.6730252,36.2174869 24.3844316,37.6278629 L24.47686,37.8233711 L24.5607327,38.0320899 C24.620649,38.1897236 24.6842296,38.3471137 24.7487174,38.4980197 L24.845785,38.7187356 C25.5098806,40.1516745 25.3088658,41.8310098 24.3286266,43.0788763 L24.1833009,43.2541346 L24.011986,43.4361404 L23.5399471,43.912 L25.6799471,46.058 L26.1455,45.5906092 C27.3289312,44.4000511 29.1044131,44.0377487 30.6311287,44.6487816 L31.0548613,44.8349986 L31.4930074,45.0204846 C32.9873547,45.5619979 34.0375152,46.9047609 34.2179407,48.4949704 L34.2371133,48.7132988 L34.2439471,49 L38.0019471,49 L38.0032128,48.4462735 L38.0192522,48.2884057 C38.1274576,47.6249446 38.670324,47.121178 39.3329345,47.0569578 L39.4766405,47.0500261 L40.2574224,47.0504629 L40.3862908,47.0472052 C40.9117927,47.0141693 41.3785384,46.6945987 41.6187206,46.1848159 L41.844514,45.6454303 L41.9362738,45.4392369 C42.1690253,44.9386148 42.0877511,44.3418474 41.7337882,43.9100598 L41.630523,43.7965861 L40.9976959,43.1568576 L40.8884924,43.0186771 C40.5169718,42.4772578 40.5499714,41.7558396 40.9615739,41.2481664 L41.0632681,41.1349846 L43.2098989,38.9944226 L43.2756708,38.939828 C43.7006311,38.5870856 44.3310837,38.6456297 44.6838261,39.0705899 C45.0094345,39.4628609 44.9845976,40.030226 44.6446071,40.3926333 L44.5530642,40.4787452 L44.5557006,40.4709898 L42.8453675,42.1828874 L43.042043,42.3796934 C44.0267602,43.3556557 44.3312191,44.8222387 43.8370696,46.0798231 L43.68072,46.4378276 L43.5413091,46.7673417 C43.0964717,47.9986235 41.9972957,48.8668753 40.6871392,49.0256714 L40.4785837,49.0447982 L40.2869739,49.0500261 L40.0003675,49.0508874 L40.0003675,50.9508874 L40.2820192,50.9500306 C41.5818555,50.9476744 42.770165,51.6744293 43.3671501,52.8333645 L43.4564269,53.0199026 L43.5231407,53.1855285 C43.5685005,53.304505 43.6166404,53.4233123 43.6651805,53.5366009 L43.7379933,53.7017263 C44.2854193,54.879356 44.1250627,56.2580867 43.32319,57.2927952 L43.1836159,57.4619678 L43.0460199,57.6075797 L42.8403675,57.8138874 L44.5491495,59.522522 C44.9096326,59.8830068 44.9373607,60.450238 44.6323348,60.8425284 L44.5491459,60.9367355 C44.188661,61.2972186 43.6214299,61.3249467 43.2291395,61.0199208 L43.1349324,60.9367319 L40.9946969,58.7904943 L40.8853386,58.6524627 C40.5130639,58.111439 40.5449796,57.3900921 40.9563133,56.8813703 L41.0579605,56.7679262 L41.6101124,56.2157194 L41.7033239,56.1175324 C42.0791941,55.6888147 42.1681935,55.0693145 41.9207943,54.5370194 C41.8585694,54.4001066 41.797694,54.2582688 41.7416302,54.1200219 L41.6151815,53.8000879 C41.4073795,53.3317112 40.9483518,53.006859 40.4273224,52.9567767 L40.2838284,52.950029 L39.3962212,52.9467872 L39.2383534,52.9307478 C38.5748924,52.8225424 38.0711258,52.279676 38.0069056,51.6170655 L37.9999739,51.4733595 L37.9999471,51 L33.2437234,51 C32.7308875,51 32.3082162,50.6139598 32.2504511,50.1166211 L32.2437234,50 L32.2441575,48.9817543 L32.2395058,48.8053138 C32.189302,48.0043017 31.6969049,47.2960375 30.9327468,46.9508731 L30.7649011,46.8825654 L30.2604424,46.6703304 L30.0017663,46.5549567 C29.2387832,46.201838 28.3365953,46.3325136 27.6956489,46.8787056 L27.5624477,47.0020817 L26.7529667,47.8069062 L26.5957968,47.9322311 C26.0003298,48.342077 25.2046636,48.3032783 24.6486537,47.8450009 L24.5333373,47.7403887 L21.7925568,44.9852941 L21.6675448,44.827967 C21.2596077,44.2333195 21.2968586,43.4393854 21.7522194,42.8822761 L21.8561865,42.7666794 L22.573977,42.0464512 L22.700988,41.9119274 C23.2619479,41.270158 23.3946166,40.3438905 23.0276292,39.5519444 C22.9491073,39.3786499 22.8722444,39.1990163 22.8008742,39.0224443 L22.6347682,38.601559 C22.318297,37.8860855 21.6165017,37.3965896 20.8256076,37.3357725 L20.6548744,37.3293755 L19.5337231,37.3261134 L19.3532743,37.3081885 C18.6245294,37.1889758 18.0727334,36.5896335 18.0066056,35.8605218 L17.9999471,35.713073 L18.0031665,31.8230478 L18.0209514,31.6427622 C18.1394895,30.9137443 18.7374837,30.3599829 19.4668605,30.2936105 L19.6143845,30.286927 L20.6292872,30.2873664 L20.8048954,30.2827145 C21.6012148,30.2325019 22.3064478,29.7391791 22.6506521,28.9722301 L22.7187859,28.8037575 L22.9303275,28.2978926 L23.0465264,28.0358928 C23.4024847,27.2679474 23.2677458,26.3517786 22.7111657,25.7050647 L22.5942455,25.5794384 L21.7966351,24.7722817 L21.6718233,24.6148161 C21.2647426,24.0197778 21.3031857,23.2257628 21.7588758,22.6697752 L21.8628998,22.5544376 L24.6101235,19.8049758 L24.7672181,19.6795421 C25.3622468,19.2693965 26.1576935,19.3072445 26.7150191,19.7651446 L26.8306415,19.8696852 L27.5467976,20.5878371 L27.6814234,20.7152194 C28.3219344,21.276594 29.2390001,21.4092877 30.0233168,21.0455595 C30.1984928,20.9656759 30.3784403,20.8881594 30.5550079,20.8163318 L30.9751272,20.6495126 C31.6878991,20.3323232 32.1766082,19.6272899 32.2373325,18.8317018 L32.2437197,18.6599409 L32.2469428,17.5361208 L32.2647276,17.3558352 C32.3832657,16.6268173 32.98126,16.0730559 33.7106368,16.0066835 L33.8581608,16 Z M65,30 C65.5522847,30 66,30.4477153 66,31 C66,31.5128358 65.6139598,31.9355072 65.1166211,31.9932723 L65,32 L61,32 C60.4477153,32 60,31.5522847 60,31 C60,30.4871642 60.3860402,30.0644928 60.8833789,30.0067277 L61,30 L65,30 Z M57,30 C57.5514001,30 58,30.4485999 58,31 C58,31.5514471 57.5514001,32 57,32 C56.4485999,32 56,31.5514471 56,31 C56,30.4485999 56.4485999,30 57,30 Z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSystem);\nexport default __webpack_public_path__ + \"static/media/system.8118e0cde2d45049cdb4db775c1fb766.svg\";\nexport { ForwardRef as ReactComponent };","import React, { memo, forwardRef, type CSSProperties, type ReactNode } from \"react\";\nimport { fr } from \"../fr\";\nimport { cx } from \"../tools/cx\";\nimport { assert } from \"tsafe/assert\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport type { Equals } from \"tsafe\";\nimport { createComponentI18nApi } from \"../i18n\";\nimport type { FrIconClassName, RiIconClassName } from \"../fr/generatedFromCss/classNames\";\nimport Button, { ButtonProps } from \"../Button\";\nimport { overwriteReadonlyProp } from \"tsafe/lab/overwriteReadonlyProp\";\n\nexport type ModalProps = {\n    className?: string;\n    /** Default: \"medium\" */\n    size?: \"small\" | \"medium\" | \"large\";\n    title: ReactNode;\n    children: ReactNode;\n    /** Default: true */\n    concealingBackdrop?: boolean;\n    topAnchor?: boolean;\n    iconId?: FrIconClassName | RiIconClassName;\n    buttons?:\n        | [ModalProps.ActionAreaButtonProps, ...ModalProps.ActionAreaButtonProps[]]\n        | ModalProps.ActionAreaButtonProps;\n    style?: CSSProperties;\n};\n\nexport namespace ModalProps {\n    export type ActionAreaButtonProps = ButtonProps & {\n        /** Default: true */\n        doClosesModal?: boolean;\n    };\n\n    export type ModalButtonProps = {\n        \"nativeButtonProps\": {\n            \"aria-controls\": string;\n            \"data-fr-opened\": boolean;\n        };\n    };\n}\n\nconst Modal = memo(\n    forwardRef<HTMLDialogElement, ModalProps & { id: string }>((props, ref) => {\n        const {\n            className,\n            id,\n            title,\n            children,\n            concealingBackdrop = true,\n            topAnchor = false,\n            iconId,\n            buttons: buttons_props,\n            size = \"medium\",\n            style,\n            ...rest\n        } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const buttons =\n            buttons_props === undefined\n                ? undefined\n                : buttons_props instanceof Array\n                ? buttons_props\n                : [buttons_props];\n\n        const { t } = useTranslation();\n        const titleId = `fr-modal-title-${id}`;\n        return (\n            <dialog\n                aria-labelledby={titleId}\n                role=\"dialog\"\n                id={id}\n                className={cx(fr.cx(\"fr-modal\", topAnchor && \"fr-modal--top\"), className)}\n                style={style}\n                ref={ref}\n                data-fr-concealing-backdrop={concealingBackdrop}\n            >\n                <div className={fr.cx(\"fr-container\", \"fr-container--fluid\", \"fr-container-md\")}>\n                    <div className={fr.cx(\"fr-grid-row\", \"fr-grid-row--center\")}>\n                        <div\n                            className={(() => {\n                                switch (size) {\n                                    case \"large\":\n                                        return fr.cx(\"fr-col-12\", \"fr-col-md-10\", \"fr-col-lg-8\");\n                                    case \"small\":\n                                        return fr.cx(\"fr-col-12\", \"fr-col-md-6\", \"fr-col-lg-4\");\n                                    case \"medium\":\n                                        return fr.cx(\"fr-col-12\", \"fr-col-md-8\", \"fr-col-lg-6\");\n                                }\n                            })()}\n                        >\n                            <div className={fr.cx(\"fr-modal__body\")}>\n                                <div className={fr.cx(\"fr-modal__header\")}>\n                                    <button\n                                        className={fr.cx(\"fr-btn--close\", \"fr-btn\")}\n                                        title={t(\"close\")}\n                                        aria-controls={id}\n                                        type=\"button\"\n                                    >\n                                        {t(\"close\")}\n                                    </button>\n                                </div>\n                                <div className={fr.cx(\"fr-modal__content\")}>\n                                    <h1 id={titleId} className={fr.cx(\"fr-modal__title\")}>\n                                        {iconId !== undefined && (\n                                            <span className={fr.cx(iconId, \"fr-fi--lg\")} />\n                                        )}\n                                        {title}\n                                    </h1>\n                                    {children}\n                                </div>\n                                {buttons !== undefined && (\n                                    <div className=\"fr-modal__footer\">\n                                        <ul\n                                            className={fr.cx(\n                                                \"fr-btns-group\",\n                                                \"fr-btns-group--right\",\n                                                \"fr-btns-group--inline-reverse\",\n                                                \"fr-btns-group--inline-lg\",\n                                                \"fr-btns-group--icon-left\"\n                                            )}\n                                        >\n                                            {[...buttons]\n                                                .reverse()\n                                                .map(\n                                                    (\n                                                        { doClosesModal = true, ...buttonProps },\n                                                        i\n                                                    ) => (\n                                                        <li key={i}>\n                                                            <Button\n                                                                {...buttonProps}\n                                                                priority={\n                                                                    buttonProps.priority ??\n                                                                    (i === 0\n                                                                        ? \"primary\"\n                                                                        : \"secondary\")\n                                                                }\n                                                                {...(!doClosesModal\n                                                                    ? {}\n                                                                    : \"linkProps\" in buttonProps\n                                                                    ? {\n                                                                          \"linkProps\": {\n                                                                              ...buttonProps.linkProps,\n                                                                              \"aria-controls\": id\n                                                                          } as any\n                                                                      }\n                                                                    : {\n                                                                          \"nativeButtonProps\": {\n                                                                              ...buttonProps.nativeButtonProps,\n                                                                              \"aria-controls\": id\n                                                                          } as any\n                                                                      })}\n                                                            />\n                                                        </li>\n                                                    )\n                                                )}\n                                        </ul>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </dialog>\n        );\n    })\n);\n\nModal.displayName = symToStr({ Modal });\n\nconst { useTranslation, addModalTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ Modal }),\n    \"frMessages\": {\n        \"close\": \"Fermer\"\n    }\n});\n\naddModalTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"close\": \"Close\"\n    }\n});\n\naddModalTranslations({\n    \"lang\": \"es\",\n    \"messages\": {\n        /* spell-checker: disable */\n        \"close\": \"Cerrar\"\n        /* spell-checker: enable */\n    }\n});\n\nexport { addModalTranslations };\n\n/** @see <https://components.react-dsfr.codegouv.studio/?path=/docs/components-modal> */\nexport function createModal(params: { isOpenedByDefault: boolean; id: string }): {\n    buttonProps: {\n        /** Only for analytics, feel free to overwrite */\n        id: string;\n        \"aria-controls\": string;\n        \"data-fr-opened\": boolean;\n    };\n    Component: (props: ModalProps) => JSX.Element;\n    close: () => void;\n    open: () => void;\n    isOpenedByDefault: boolean;\n    id: string;\n} {\n    const { isOpenedByDefault, id } = params;\n\n    const buttonProps = {\n        \"id\": `${id}-control-button`,\n        \"aria-controls\": id,\n        \"data-fr-opened\": isOpenedByDefault\n    };\n\n    const hiddenControlButtonId = `${id}-hidden-control-button`;\n\n    function Component(props: ModalProps) {\n        return (\n            <>\n                <Button\n                    nativeButtonProps={{\n                        ...buttonProps,\n                        \"id\": hiddenControlButtonId,\n                        \"type\": \"button\",\n                        \"tabIndex\": -1,\n                        \"aria-hidden\": true\n                    }}\n                    className={fr.cx(\"fr-hidden\")}\n                >\n                    {\" \"}\n                </Button>\n                <Modal {...props} id={id} />\n            </>\n        );\n    }\n\n    Component.displayName = `${id}-modal`;\n\n    overwriteReadonlyProp(Component as any, \"name\", Component.displayName);\n\n    function open() {\n        const modalElement = document.getElementById(id);\n\n        // @ts-expect-error: Property 'dsfr' does not exist on type 'Window & typeof globalThis'.ts(2339)\n        window.dsfr(modalElement).modal.disclose();\n    }\n\n    function close() {\n        const modalElement = document.getElementById(id);\n\n        // @ts-expect-error: Property 'dsfr' does not exist on type 'Window & typeof globalThis'.ts(2339)\n        window.dsfr(modalElement).modal.conceal();\n    }\n\n    return {\n        Component,\n        buttonProps,\n        open,\n        close,\n        isOpenedByDefault,\n        id\n    };\n}\n","import React, { useId } from \"react\";\nimport { fr } from \"../fr\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { createComponentI18nApi } from \"../i18n\";\nimport ArtworkLightSvg from \"../dsfr/artwork/light.svg\";\nimport ArtworkDarkSvg from \"../dsfr/artwork/dark.svg\";\nimport ArtworkSystemSvg from \"../dsfr/artwork/system.svg\";\nimport { getAssetUrl } from \"../tools/getAssetUrl\";\nimport type { HeaderProps } from \"../Header\";\nimport type { FooterProps } from \"../Footer\";\nimport { createModal } from \"../Modal\";\n\nconst modal = createModal({\n    \"isOpenedByDefault\": false,\n    \"id\": \"fr-theme-modal\"\n});\n\nexport const headerFooterDisplayItem: HeaderProps.QuickAccessItem.Button &\n    FooterProps.BottomItem.Button = {\n    \"buttonProps\": modal.buttonProps,\n    \"iconId\": \"fr-icon-theme-fill\",\n    \"text\": (() => {\n        function Text() {\n            const { t } = useTranslation();\n            return <>{t(\"display settings\")}</>;\n        }\n\n        return <Text />;\n    })()\n};\n\n/** @see <https://components.react-dsfr.codegouv.studio/?path=/docs/components-display> */\nexport function Display() {\n    const { t } = useTranslation();\n\n    const { getInputId } = (function useClosure() {\n        const id = useId();\n\n        function getInputId(theme: \"light\" | \"dark\" | \"system\") {\n            return `${id}-${theme}`;\n        }\n\n        return { getInputId };\n    })();\n\n    return (\n        <modal.Component title={t(\"display settings\")} size=\"small\">\n            <div /*id=\"fr-display\"*/ className=\"fr-display\">\n                <div className={fr.cx(\"fr-form-group\" as any)}>\n                    <fieldset className={fr.cx(\"fr-fieldset\")}>\n                        <legend\n                            className={fr.cx(\"fr-fieldset__legend\", \"fr-text--regular\")}\n                            //id=\"-legend\"\n                        >\n                            {t(\"pick a theme\")}\n                        </legend>\n                        <div className={fr.cx(\"fr-fieldset__content\")}>\n                            {([\"light\", \"dark\", \"system\"] as const).map(theme => (\n                                <div\n                                    key={theme}\n                                    className={fr.cx(\"fr-radio-group\", \"fr-radio-rich\")}\n                                >\n                                    <input\n                                        value={theme}\n                                        type=\"radio\"\n                                        id={getInputId(theme)}\n                                        name=\"fr-radios-theme\"\n                                    />\n                                    <label className=\"fr-label\" htmlFor={getInputId(theme)}>\n                                        {t(`${theme} theme`)}\n                                        {theme === \"system\" && (\n                                            <span className={fr.cx(\"fr-hint-text\")}>\n                                                {t(\"system theme hint\")}\n                                            </span>\n                                        )}\n                                    </label>\n                                    <div className={fr.cx(\"fr-radio-rich__img\")}>\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            //className={fr.cx(\"fr-artwork\")}\n                                            width=\"80px\"\n                                            height=\"80px\"\n                                            viewBox=\"0 0 80 80\"\n                                        >\n                                            {(\n                                                [\n                                                    \"artwork-decorative\",\n                                                    \"artwork-minor\",\n                                                    \"artwork-major\"\n                                                ] as const\n                                            ).map(label => (\n                                                <use\n                                                    key={label}\n                                                    className={fr.cx(`fr-${label}`)}\n                                                    xlinkHref={`${getAssetUrl(\n                                                        (() => {\n                                                            switch (theme) {\n                                                                case \"dark\":\n                                                                    return ArtworkDarkSvg;\n                                                                case \"light\":\n                                                                    return ArtworkLightSvg;\n                                                                case \"system\":\n                                                                    return ArtworkSystemSvg;\n                                                            }\n                                                        })()\n                                                    )}#${label}`}\n                                                />\n                                            ))}\n                                        </svg>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n        </modal.Component>\n    );\n}\n\nDisplay.displayName = symToStr({ Display });\n\nexport default Display;\n\nconst { useTranslation, addDisplayTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ Display }),\n    \"frMessages\": {\n        /* spell-checker: disable */\n        \"display settings\": \"Paramètres d'affichage\",\n        \"close\": \"Fermer\",\n        \"pick a theme\": `Choisissez un thème pour personnaliser l'apparence du site.`,\n        \"light theme\": `Thème clair`,\n        \"dark theme\": `Thème sombre`,\n        \"system theme\": `Système.`,\n        \"system theme hint\": `Utilise les paramètres système.`\n        /* spell-checker: enable */\n    }\n});\n\naddDisplayTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"display settings\": \"Display settings\",\n        \"close\": \"Close\",\n        \"pick a theme\": `Pick a theme to customize the website's look.`,\n        \"light theme\": `Light theme`,\n        \"dark theme\": \"Dark theme\",\n        \"system theme\": `System.`,\n        \"system theme hint\": \"Use system preference\"\n    }\n});\n\naddDisplayTranslations({\n    \"lang\": \"es\",\n    \"messages\": {\n        /* spell-checker: disable */\n        \"display settings\": \"Parámetro de visualización\",\n        \"close\": \"Cerrar\",\n        \"pick a theme\": `Elija un tema para personalizar el aspecto del sitio.`\n        /* spell-checker: enable */\n    }\n});\n\nexport { addDisplayTranslations };\n","export function getAssetUrl(componentOrUrl: { src: string } | string): string {\n    return typeof componentOrUrl === \"string\" ? componentOrUrl : componentOrUrl.src;\n}\n","import type { ReactNode } from \"react\";\n\nexport function generateValidHtmlId(params: {\n    text: ReactNode;\n    fallback?: string | number;\n}): string {\n    const { text, fallback } = params;\n\n    if (typeof text !== \"string\" || text === \"\") {\n        return fallback !== undefined ? `-${fallback}` : \"\";\n    }\n\n    // Remove any space characters\n    let result = text.replace(/\\s+/g, \"\");\n\n    // Replace any non-alphanumeric characters with underscores\n    result = result.replace(/[^a-zA-Z0-9]/g, \"_\");\n\n    return `-${result}`;\n}\n","\"use client\";\n\nimport React, { memo, forwardRef, type CSSProperties, type ReactNode } from \"react\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { fr } from \"../fr\";\nimport { cx } from \"../tools/cx\";\nimport { assert } from \"tsafe/assert\";\nimport type { Equals } from \"tsafe\";\nimport type { RegisteredLinkProps } from \"../link\";\nimport { getLink } from \"../link\";\nimport { generateValidHtmlId } from \"../tools/generateValidHtmlId\";\n\nexport type MenuProps = {\n    classes?: Partial<Record<\"root\" | \"list\", string>>;\n    style?: CSSProperties;\n    links: MenuProps.Link[];\n};\n\nexport namespace MenuProps {\n    export type Link = {\n        text: ReactNode;\n        linkProps: RegisteredLinkProps;\n        isActive?: boolean;\n    };\n}\n\nexport const Menu = memo(\n    forwardRef<HTMLDivElement, MenuProps & { id: string }>((props, ref) => {\n        const { id, classes = {}, style, links, ...rest } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const { Link } = getLink();\n\n        return (\n            <div\n                className={cx(fr.cx(\"fr-menu\"), classes.root)}\n                style={style}\n                id={id}\n                ref={ref}\n                {...rest}\n            >\n                <ul className={cx(fr.cx(\"fr-menu__list\"), classes.list)}>\n                    {links.map(({ text, linkProps, isActive = false }, i) => (\n                        <li key={i}>\n                            <Link\n                                {...linkProps}\n                                id={\n                                    linkProps.id ??\n                                    `${id}-link${generateValidHtmlId({\n                                        text\n                                    })}-${i}`\n                                }\n                                className={cx(fr.cx(\"fr-nav__link\"), linkProps.className)}\n                                {...(isActive && { [\"aria-current\"]: \"page\" })}\n                            >\n                                {text}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    })\n);\n\nMenu.displayName = symToStr({ Menu });\n\nexport default Menu;\n","import React, { memo, forwardRef, type ReactNode, type CSSProperties } from \"react\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { createComponentI18nApi } from \"../i18n\";\nimport { fr } from \"../fr\";\nimport { cx } from \"../tools/cx\";\nimport { assert } from \"tsafe/assert\";\nimport type { Equals } from \"tsafe\";\nimport { getLink } from \"../link\";\nimport type { RegisteredLinkProps } from \"../link\";\nimport { generateValidHtmlId } from \"../tools/generateValidHtmlId\";\n\nexport type MegaMenuProps = {\n    classes?: Partial<Record<\"root\" | \"leader\" | \"category\" | \"list\", string>>;\n    style?: CSSProperties;\n    leader?: MegaMenuProps.Leader;\n    categories: MegaMenuProps.Category[];\n};\nexport namespace MegaMenuProps {\n    export type Leader = {\n        title: ReactNode;\n        paragraph: ReactNode;\n        link?: {\n            linkProps: RegisteredLinkProps;\n            text: ReactNode;\n        };\n    };\n\n    export type Category = {\n        categoryMainLink: {\n            text: ReactNode;\n            linkProps: RegisteredLinkProps;\n        };\n        links: {\n            text: ReactNode;\n            linkProps: RegisteredLinkProps;\n            isActive?: boolean;\n        }[];\n    };\n}\n\nexport const MegaMenu = memo(\n    forwardRef<HTMLDivElement, MegaMenuProps & { id: string }>((props, ref) => {\n        const { id, classes = {}, style, leader, categories, ...rest } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const { t } = useTranslation();\n\n        const { Link } = getLink();\n\n        return (\n            <div\n                className={cx(fr.cx(\"fr-mega-menu\"), classes.root)}\n                style={style}\n                tabIndex={-1}\n                id={id}\n                ref={ref}\n                {...rest}\n            >\n                <div className={fr.cx(\"fr-container\", \"fr-container--fluid\", \"fr-container-lg\")}>\n                    <button\n                        className={fr.cx(\"fr-link--close\", \"fr-link\")}\n                        aria-controls=\"mega-menu-775\"\n                    >\n                        {t(\"close\")}\n                    </button>\n                    <div className={fr.cx(\"fr-grid-row\", \"fr-grid-row-lg--gutters\")}>\n                        {leader !== undefined && (\n                            <div\n                                className={fr.cx(\n                                    \"fr-col-12\",\n                                    \"fr-col-lg-8\",\n                                    \"fr-col-offset-lg-4--right\",\n                                    \"fr-mb-4v\"\n                                )}\n                            >\n                                <div className={cx(fr.cx(\"fr-mega-menu__leader\"), classes.leader)}>\n                                    <h4 className={fr.cx(\"fr-h4\", \"fr-mb-2v\")}>{leader.title}</h4>\n                                    <p className={fr.cx(\"fr-hidden\", \"fr-displayed-lg\")}>\n                                        {leader.paragraph}\n                                    </p>\n                                    {leader.link !== undefined && (\n                                        <Link\n                                            {...leader.link.linkProps}\n                                            id={\n                                                leader.link.linkProps.id ??\n                                                `${id}-leader-link${generateValidHtmlId({\n                                                    \"text\": leader.link.text\n                                                })}`\n                                            }\n                                            className={cx(\n                                                fr.cx(\n                                                    \"fr-link\",\n                                                    \"fr-icon-arrow-right-line\",\n                                                    \"fr-link--icon-right\",\n                                                    \"fr-link--align-on-content\" as any\n                                                ),\n                                                leader.link.linkProps.className\n                                            )}\n                                        >\n                                            {leader.link.text}\n                                        </Link>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                        {categories.map(({ categoryMainLink, links }, i) => (\n                            <div className={fr.cx(\"fr-col-12\", \"fr-col-lg-3\")} key={i}>\n                                <h5\n                                    className={cx(\n                                        fr.cx(\"fr-mega-menu__category\"),\n                                        classes.category\n                                    )}\n                                >\n                                    <Link\n                                        {...categoryMainLink.linkProps}\n                                        id={\n                                            categoryMainLink.linkProps.id ??\n                                            `${id}-category-link${generateValidHtmlId({\n                                                \"text\": categoryMainLink.text\n                                            })}-${i}`\n                                        }\n                                        className={cx(\n                                            fr.cx(\"fr-nav__link\"),\n                                            categoryMainLink.linkProps.className\n                                        )}\n                                    >\n                                        {categoryMainLink.text}\n                                    </Link>\n                                </h5>\n                                <ul className={cx(fr.cx(\"fr-mega-menu__list\"), classes.list)}>\n                                    {links.map(({ linkProps, text, isActive }, j) => (\n                                        <li key={j}>\n                                            <Link\n                                                {...linkProps}\n                                                id={\n                                                    linkProps.id ??\n                                                    `${id}-link${generateValidHtmlId({\n                                                        \"text\": text\n                                                    })}-${i}-${j}`\n                                                }\n                                                className={cx(\n                                                    fr.cx(\"fr-nav__link\"),\n                                                    linkProps.className\n                                                )}\n                                                {...(!isActive ? {} : { \"aria-current\": \"page\" })}\n                                            >\n                                                {text}\n                                            </Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    })\n);\n\nMegaMenu.displayName = symToStr({ MegaMenu });\n\nconst { useTranslation, addMegaMenuTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ MegaMenu }),\n    \"frMessages\": {\n        /* spell-checker: disable */\n        \"close\": \"Fermer\"\n        /* spell-checker: enable */\n    }\n});\n\naddMegaMenuTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"close\": \"Close\"\n    }\n});\n\nexport { addMegaMenuTranslations };\n\nexport default MegaMenu;\n","import React, { memo, forwardRef, type ReactNode, type CSSProperties } from \"react\";\nimport { createComponentI18nApi } from \"../i18n\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { assert } from \"tsafe/assert\";\nimport type { Equals } from \"tsafe\";\nimport type { RegisteredLinkProps } from \"../link\";\nimport { getLink } from \"../link\";\nimport { fr } from \"../fr\";\nimport { cx } from \"../tools/cx\";\nimport type { MenuProps } from \"./Menu\";\nimport { Menu } from \"./Menu\";\nimport type { MegaMenuProps } from \"./MegaMenu\";\nimport { MegaMenu } from \"./MegaMenu\";\nimport { useAnalyticsId } from \"../tools/useAnalyticsId\";\n\nexport type MainNavigationProps = {\n    className?: string;\n    id?: string;\n    items: MainNavigationProps.Item[];\n    classes?: Partial<\n        Record<\n            | \"root\"\n            | \"list\"\n            | \"item\"\n            | \"link\"\n            | \"btn\"\n            | \"menu\"\n            | \"menuList\"\n            | \"megaMenu\"\n            | \"megaMenuLeader\"\n            | \"megaMenuCategory\"\n            | \"megaMenuList\",\n            string\n        >\n    >;\n    style?: CSSProperties;\n};\n\nexport namespace MainNavigationProps {\n    export type Item = Item.Link | Item.Menu | Item.MegaMenu;\n\n    export namespace Item {\n        export type Common = {\n            isActive?: boolean;\n            className?: string;\n            text: ReactNode;\n        };\n\n        export type Link = Common & {\n            linkProps: RegisteredLinkProps;\n            menuLinks?: never;\n            megaMenu?: never;\n            buttonProps?: never;\n        };\n\n        export type Menu = Common & {\n            linkProps?: never;\n            menuLinks: MenuProps.Link[];\n            megaMenu?: never;\n            /** @see <https://github.com/codegouvfr/react-dsfr/issues/38> */\n            buttonProps?: React.ButtonHTMLAttributes<HTMLButtonElement>;\n        };\n\n        export type MegaMenu = Common & {\n            linkProps?: never;\n            menuLinks?: never;\n            megaMenu: {\n                leader?: MegaMenuProps.Leader;\n                categories: MegaMenuProps.Category[];\n            };\n            /** @see <https://github.com/codegouvfr/react-dsfr/issues/38> */\n            buttonProps?: React.ButtonHTMLAttributes<HTMLButtonElement>;\n        };\n    }\n}\n\nexport const MainNavigation = memo(\n    forwardRef<HTMLDivElement, MainNavigationProps>((props, ref) => {\n        const { className, items, classes = {}, style, id: id_props, ...rest } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const { t } = useTranslation();\n\n        const { Link } = getLink();\n\n        const id = useAnalyticsId({\n            \"explicitlyProvidedId\": id_props,\n            \"defaultIdPrefix\": \"main-navigation\"\n        });\n\n        const getMenuId = (i: number) => `${id}-menu-${i}`;\n\n        return (\n            <nav\n                id={id}\n                className={cx(fr.cx(\"fr-nav\"), classes.root, className)}\n                style={style}\n                role=\"navigation\"\n                aria-label={t(\"main menu\")}\n                ref={ref}\n                {...rest}\n            >\n                <ul className={cx(fr.cx(\"fr-nav__list\"), classes.list)}>\n                    {items.map(\n                        (\n                            {\n                                className,\n                                text,\n                                isActive = false,\n                                linkProps,\n                                menuLinks = [],\n                                megaMenu,\n                                buttonProps = {}\n                            },\n                            i\n                        ) => (\n                            <li\n                                key={i}\n                                className={cx(fr.cx(\"fr-nav__item\"), classes.item, className)}\n                            >\n                                {linkProps !== undefined ? (\n                                    <Link\n                                        {...linkProps}\n                                        id={linkProps.id ?? `${id}-link-${i}`}\n                                        className={cx(\n                                            fr.cx(\"fr-nav__link\"),\n                                            classes.link,\n                                            linkProps.className\n                                        )}\n                                        {...(isActive && { [\"aria-current\"]: \"page\" })}\n                                    >\n                                        {text}\n                                    </Link>\n                                ) : (\n                                    <>\n                                        <button\n                                            {...buttonProps}\n                                            id={buttonProps.id ?? `${id}-button-${i}`}\n                                            className={cx(\n                                                fr.cx(\"fr-nav__btn\"),\n                                                buttonProps.className,\n                                                classes.btn\n                                            )}\n                                            aria-expanded={false}\n                                            aria-controls={getMenuId(i)}\n                                            {...(isActive && { [\"aria-current\"]: true })}\n                                        >\n                                            {text}\n                                        </button>\n                                        {menuLinks.length !== 0 && (\n                                            <Menu\n                                                classes={{\n                                                    \"root\": cx(fr.cx(\"fr-collapse\"), classes.root),\n                                                    \"list\": classes.menuList\n                                                }}\n                                                links={menuLinks}\n                                                id={getMenuId(i)}\n                                            />\n                                        )}\n                                        {megaMenu !== undefined && (\n                                            <MegaMenu\n                                                classes={{\n                                                    \"root\": cx(\n                                                        fr.cx(\"fr-collapse\"),\n                                                        classes.megaMenu\n                                                    ),\n                                                    \"leader\": classes.megaMenuLeader,\n                                                    \"category\": classes.megaMenuCategory,\n                                                    \"list\": classes.menuList\n                                                }}\n                                                id={getMenuId(i)}\n                                                leader={megaMenu.leader}\n                                                categories={megaMenu.categories}\n                                            />\n                                        )}\n                                    </>\n                                )}\n                            </li>\n                        )\n                    )}\n                </ul>\n            </nav>\n        );\n    })\n);\n\nMainNavigation.displayName = symToStr({ MainNavigation });\n\nexport default MainNavigation;\n\nconst { useTranslation, addMainNavigationTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ MainNavigation }),\n    \"frMessages\": {\n        /* spell-checker: disable */\n        \"main menu\": \"Menu principal\"\n        /* spell-checker: enable */\n    }\n});\n\naddMainNavigationTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"main menu\": \"Main menu\"\n    }\n});\n\nexport { addMainNavigationTranslations };\n","export * from \"./MainNavigation\";\nexport { addMegaMenuTranslations } from \"./MegaMenu\";\n\nimport { MainNavigation } from \"./MainNavigation\";\n\nexport default MainNavigation;\n","import React, { memo, forwardRef, type CSSProperties } from \"react\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { assert } from \"tsafe/assert\";\nimport { createComponentI18nApi } from \"../i18n\";\nimport type { Equals } from \"tsafe\";\nimport { cx } from \"../tools/cx\";\nimport { fr } from \"../fr\";\nimport { SearchButton } from \"./SearchButton\";\nimport { useAnalyticsId } from \"../tools/useAnalyticsId\";\nimport \"../assets/search-bar.css\";\n\nexport type SearchBarProps = {\n    className?: string;\n    id?: string;\n    /** Default: \"Rechercher\" (or translation) */\n    label?: string;\n    /** Default: false */\n    big?: boolean;\n    classes?: Partial<Record<\"root\" | \"label\", string>>;\n    style?: CSSProperties;\n    renderInput?: (\n        /**\n         * id and name must be forwarded to the <input /> component\n         * the others params can, but it's not mandatory.\n         **/\n        params: {\n            id: string;\n            type: \"search\";\n            className: string;\n            placeholder: string;\n        }\n    ) => JSX.Element;\n\n    onButtonClick?: (text: string) => void;\n};\n\n/**\n * @see <https://components.react-dsfr.codegouv.studio/?path=/docs/components-input>\n * */\nexport const SearchBar = memo(\n    forwardRef<HTMLDivElement, SearchBarProps>((props, ref) => {\n        const {\n            className,\n            id: id_props,\n            label: label_props,\n            big = false,\n            classes = {},\n            style,\n            renderInput = ({ className, id, placeholder, type }) => (\n                <input className={className} id={id} placeholder={placeholder} type={type} />\n            ),\n            onButtonClick,\n            ...rest\n        } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const { t } = useTranslation();\n\n        const label = label_props ?? t(\"label\");\n\n        const id = useAnalyticsId({\n            \"defaultIdPrefix\": \"fr-search-bar\",\n            \"explicitlyProvidedId\": id_props\n        });\n\n        const inputId = `search-${id}-input`;\n\n        return (\n            <div\n                id={id}\n                className={cx(\n                    fr.cx(\"fr-search-bar\", big && \"fr-search-bar--lg\"),\n                    classes.root,\n                    className\n                )}\n                role=\"search\"\n                ref={ref}\n                style={style}\n                {...rest}\n            >\n                <label className={cx(fr.cx(\"fr-label\"), classes.label)} htmlFor={inputId}>\n                    {label}\n                </label>\n                {/* NOTE: It is crucial that renderInput be called\n                one time and only one time in each render to allow useState to be used inline*/}\n                {renderInput({\n                    \"className\": fr.cx(\"fr-input\"),\n                    \"placeholder\": label,\n                    \"type\": \"search\",\n                    \"id\": inputId\n                })}\n                <SearchButton id={`${id}-button`} searchInputId={inputId} onClick={onButtonClick} />\n            </div>\n        );\n    })\n);\n\nSearchBar.displayName = symToStr({ SearchBar });\n\nexport default SearchBar;\n\nexport const { useTranslation, addSearchBarTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ SearchBar }),\n    \"frMessages\": {\n        /* spell-checker: disable */\n        \"label\": \"Rechercher\"\n        /* spell-checker: enable */\n    }\n});\n\naddSearchBarTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"label\": \"Search\"\n    }\n});\n","\"use client\";\n\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport { useTranslation } from \"./SearchBar\";\nimport { fr } from \"../fr\";\nimport { assert } from \"tsafe/assert\";\nimport { is } from \"tsafe/is\";\nimport { useConstCallback } from \"../tools/powerhooks/useConstCallback\";\nimport { observeInputValue } from \"../tools/observeInputValue\";\nimport { id } from \"tsafe/id\";\n\nexport type SearchButtonProps = {\n    id: string;\n    searchInputId: string;\n    onClick: ((text: string) => void) | undefined;\n};\n\nexport function SearchButton(props: SearchButtonProps) {\n    const { searchInputId, onClick: onClick_props, id: id_props } = props;\n\n    const { t } = useTranslation();\n\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n    const [{ focusInputElement, getInputValue, resetInputValue, getIsInputFocused }, setInputApi] =\n        useState(() => ({\n            \"getInputValue\": id<() => string>(() => \"\"),\n            \"resetInputValue\": id<() => void>(() => {\n                /* do nothing */\n            }),\n            \"focusInputElement\": id<() => void>(() => {\n                /* do nothing */\n            }),\n            \"getIsInputFocused\": id<() => boolean>(() => false)\n        }));\n\n    const onClick = useConstCallback(() => {\n        const inputValue = getInputValue();\n\n        if (inputValue === \"\") {\n            focusInputElement();\n            return;\n        }\n\n        onClick_props?.(inputValue);\n        resetInputValue();\n    });\n\n    const isControlledByUser = onClick_props === undefined;\n\n    useEffect(() => {\n        const inputElement = document.getElementById(searchInputId);\n\n        assert(inputElement !== null, `${searchInputId} should be mounted`);\n        assert(\n            \"value\" in inputElement && typeof inputElement.value === \"string\",\n            `${searchInputId} is not an HTML input`\n        );\n\n        assert(is<HTMLInputElement>(inputElement));\n\n        setInputApi({\n            \"focusInputElement\": () => inputElement.focus(),\n            \"getInputValue\": () => inputElement.value,\n            \"resetInputValue\": () => (inputElement.value = \"\"),\n            \"getIsInputFocused\": () => document.activeElement === inputElement\n        });\n\n        const cleanups: (() => void)[] = [];\n\n        {\n            const { cleanup } = observeInputValue({\n                inputElement,\n                \"callback\": () => forceUpdate()\n            });\n\n            cleanups.push(cleanup);\n        }\n\n        if (isControlledByUser) {\n            inputElement.addEventListener(\n                \"focus\",\n                (() => {\n                    const callback = () => forceUpdate();\n\n                    cleanups.push(() => inputElement.removeEventListener(\"focus\", callback));\n\n                    return callback;\n                })()\n            );\n\n            inputElement.addEventListener(\n                \"blur\",\n                (() => {\n                    const callback = () => forceUpdate();\n\n                    cleanups.push(() => inputElement.removeEventListener(\"blur\", callback));\n\n                    return callback;\n                })()\n            );\n        }\n\n        if (!isControlledByUser) {\n            inputElement.addEventListener(\n                \"keydown\",\n                (() => {\n                    const callback = (event: KeyboardEvent): void => {\n                        if (event.key !== \"Enter\") {\n                            return;\n                        }\n\n                        onClick();\n                        inputElement.blur();\n                    };\n\n                    cleanups.push(() => inputElement.removeEventListener(\"keydown\", callback));\n\n                    return callback;\n                })()\n            );\n\n            inputElement.addEventListener(\n                \"keydown\",\n                (() => {\n                    const callback = (event: KeyboardEvent) => {\n                        if (event.key !== \"Escape\") {\n                            return;\n                        }\n\n                        inputElement.blur();\n                    };\n\n                    cleanups.push(() => inputElement.removeEventListener(\"keydown\", callback));\n\n                    return callback;\n                })()\n            );\n        }\n\n        return () => {\n            cleanups.forEach(cleanup => cleanup());\n        };\n    }, [searchInputId, isControlledByUser]);\n\n    if (onClick_props === undefined && (getIsInputFocused() || getInputValue() !== \"\")) {\n        return null;\n    }\n\n    return (\n        <button\n            id={id_props}\n            className={fr.cx(\"fr-btn\")}\n            title={t(\"label\")}\n            onClick={onClick}\n            style={\n                onClick_props !== undefined\n                    ? undefined\n                    : {\n                          \"position\": \"absolute\",\n                          \"right\": 0\n                      }\n            }\n        >\n            {t(\"label\")}\n        </button>\n    );\n}\n","import { assert } from \"tsafe/assert\";\n\n// NOTE: The callback is called way too often, it can be called multiple times\n// for the same input value. Futhermore the callback is not guaranteed to be called\n// as soon as the input value changes.\nexport function observeInputValue(params: {\n    inputElement: HTMLInputElement;\n    callback: () => void;\n}): { cleanup: () => void } {\n    const { inputElement, callback: callback_params } = params;\n\n    const cleanups: (() => void)[] = [];\n\n    {\n        const descriptorToRestore = Object.getOwnPropertyDescriptor(inputElement, \"value\");\n\n        cleanups.push(() => {\n            assert(descriptorToRestore !== undefined);\n            Object.defineProperty(inputElement, \"value\", descriptorToRestore);\n        });\n\n        const inputElementPrototype = Object.getPrototypeOf(inputElement);\n        const descriptor = Object.getOwnPropertyDescriptor(inputElementPrototype, \"value\");\n\n        Object.defineProperty(inputElement, \"value\", {\n            \"get\": function (...args) {\n                // @ts-expect-error\n                return descriptor.get.apply(this, args);\n            },\n            \"set\": function (...args) {\n                // @ts-expect-error\n                descriptor.set.apply(this, args);\n                const newValue = this.value;\n\n                callback_params();\n\n                return newValue;\n            }\n        });\n    }\n\n    inputElement.addEventListener(\n        \"input\",\n        (() => {\n            const callback = (): void => {\n                callback_params();\n            };\n\n            cleanups.push(() => inputElement.removeEventListener(\"input\", callback));\n\n            return callback;\n        })()\n    );\n\n    inputElement.addEventListener(\n        \"keydown\",\n        (() => {\n            const callback = (event: KeyboardEvent) => {\n                if (event.key === \"Escape\") {\n                    const timer = setTimeout(() => {\n                        cleanups.splice(cleanups.indexOf(cleanup), 1);\n                        callback_params();\n                    }, 50);\n\n                    const cleanup = () => {\n                        clearTimeout(timer);\n                    };\n\n                    cleanups.push(cleanup);\n                }\n            };\n\n            cleanups.push(() => inputElement.removeEventListener(\"keyup\", callback));\n\n            return callback;\n        })()\n    );\n\n    function cleanup() {\n        cleanups.forEach(cleanup => cleanup());\n    }\n\n    return { cleanup };\n}\n","import React, {\n    memo,\n    forwardRef,\n    useId,\n    type ReactNode,\n    type CSSProperties,\n    type ComponentProps\n} from \"react\";\nimport { fr } from \"../fr\";\nimport { createComponentI18nApi } from \"../i18n\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { cx } from \"../tools/cx\";\nimport { getLink } from \"../link\";\nimport type { RegisteredLinkProps } from \"../link\";\nimport { assert } from \"tsafe/assert\";\nimport type { Equals } from \"tsafe\";\nimport type { FrIconClassName, RiIconClassName } from \"../fr/generatedFromCss/classNames\";\nimport type { MainNavigationProps } from \"../MainNavigation\";\nimport { MainNavigation } from \"../MainNavigation\";\nimport { Display } from \"../Display/Display\";\nimport { setBrandTopAndHomeLinkProps } from \"../zz_internal/brandTopAndHomeLinkProps\";\nimport { typeGuard } from \"tsafe/typeGuard\";\nimport { SearchButton } from \"../SearchBar/SearchButton\";\nimport { useTranslation as useSearchBarTranslation } from \"../SearchBar/SearchBar\";\nimport { generateValidHtmlId } from \"../tools/generateValidHtmlId\";\n\nexport type HeaderProps = {\n    className?: string;\n    id?: string;\n    brandTop: ReactNode;\n    homeLinkProps: RegisteredLinkProps & { title: string };\n    serviceTitle?: ReactNode;\n    serviceTagline?: ReactNode;\n    navigation?: MainNavigationProps.Item[] | ReactNode;\n    /** There should be at most three of them */\n    quickAccessItems?: (HeaderProps.QuickAccessItem | ReactNode)[];\n    operatorLogo?: {\n        orientation: \"horizontal\" | \"vertical\";\n        /**\n         * Expected ratio:\n         * If \"vertical\": 9x16\n         * If \"horizontal\": 16x9\n         */\n        imgUrl: string;\n        /** Textual alternative of the image, it MUST include the text present in the image*/\n        alt: string;\n    };\n    renderSearchInput?: (\n        /**\n         * id and name must be forwarded to the <input /> component\n         * the others params can, but it's not mandatory.\n         **/\n        params: {\n            id: string;\n            type: \"search\";\n            className: string;\n            placeholder: string;\n        }\n    ) => JSX.Element;\n    /** Called when the search button is clicked */\n    onSearchButtonClick?: (text: string) => void;\n    classes?: Partial<\n        Record<\n            | \"root\"\n            | \"body\"\n            | \"bodyRow\"\n            | \"brand\"\n            | \"brandTop\"\n            | \"logo\"\n            | \"operator\"\n            | \"navbar\"\n            | \"service\"\n            | \"serviceTitle\"\n            | \"serviceTagline\"\n            | \"toolsLinks\"\n            | \"menu\"\n            | \"menuLinks\",\n            string\n        >\n    >;\n    style?: CSSProperties;\n};\n\nexport namespace HeaderProps {\n    export type QuickAccessItem = QuickAccessItem.Link | QuickAccessItem.Button;\n\n    export namespace QuickAccessItem {\n        export type Common = {\n            iconId: FrIconClassName | RiIconClassName;\n            text: ReactNode;\n        };\n\n        export type Link = Common & {\n            linkProps: RegisteredLinkProps;\n            buttonProps?: never;\n        };\n\n        export type Button = Common & {\n            linkProps?: never;\n            buttonProps: ComponentProps<\"button\"> &\n                Record<`data-${string}`, string | boolean | null | undefined>;\n        };\n    }\n}\n\nexport const headerMenuModalIdPrefix = \"header-menu-modal\";\n\n/** @see <https://components.react-dsfr.codegouv.studio/?path=/docs/components-header> */\nexport const Header = memo(\n    forwardRef<HTMLDivElement, HeaderProps>((props, ref) => {\n        const {\n            className,\n            id: id_props,\n            brandTop,\n            serviceTitle,\n            serviceTagline,\n            homeLinkProps,\n            navigation = undefined,\n            quickAccessItems = [],\n            operatorLogo,\n            renderSearchInput,\n            onSearchButtonClick,\n            classes = {},\n            style,\n            ...rest\n        } = props;\n\n        assert<Equals<keyof typeof rest, never>>();\n\n        const id = id_props ?? \"fr-header\";\n\n        const menuModalId = `${headerMenuModalIdPrefix}-${id}`;\n        const menuButtonId = `${id}-menu-button`;\n        const searchModalId = `${id}-search-modal`;\n        const searchInputId = `${id}-search-input`;\n\n        const isSearchBarEnabled =\n            renderSearchInput !== undefined || onSearchButtonClick !== undefined;\n\n        setBrandTopAndHomeLinkProps({ brandTop, homeLinkProps });\n\n        const { t } = useTranslation();\n        const { t: tSearchBar } = useSearchBarTranslation();\n\n        const { Link } = getLink();\n\n        const quickAccessNode = (\n            <ul className={fr.cx(\"fr-btns-group\")}>\n                {quickAccessItems.map((quickAccessItem, i) => (\n                    <li key={i}>\n                        {!typeGuard<HeaderProps.QuickAccessItem>(\n                            quickAccessItem,\n                            quickAccessItem instanceof Object && \"text\" in quickAccessItem\n                        ) ? (\n                            quickAccessItem\n                        ) : (\n                            <HeaderQuickAccessItem\n                                id={`${id}-quick-access-item-${generateValidHtmlId({\n                                    \"fallback\": \"\",\n                                    \"text\": quickAccessItem.text\n                                })}-${i}`}\n                                quickAccessItem={quickAccessItem}\n                            />\n                        )}\n                    </li>\n                ))}\n            </ul>\n        );\n\n        return (\n            <>\n                <Display />\n                <header\n                    role=\"banner\"\n                    id={id}\n                    className={cx(fr.cx(\"fr-header\"), classes.root, className)}\n                    ref={ref}\n                    style={style}\n                    {...rest}\n                >\n                    <div className={cx(fr.cx(\"fr-header__body\" as any), classes.body)}>\n                        <div className={fr.cx(\"fr-container\")}>\n                            <div className={cx(fr.cx(\"fr-header__body-row\"), classes.bodyRow)}>\n                                <div\n                                    className={cx(\n                                        fr.cx(\"fr-header__brand\", \"fr-enlarge-link\"),\n                                        classes.brand\n                                    )}\n                                >\n                                    <div\n                                        className={cx(\n                                            fr.cx(\"fr-header__brand-top\"),\n                                            classes.brandTop\n                                        )}\n                                    >\n                                        <div className={cx(fr.cx(\"fr-header__logo\"), classes.logo)}>\n                                            {(() => {\n                                                const children = (\n                                                    <p className={fr.cx(\"fr-logo\")}>{brandTop}</p>\n                                                );\n\n                                                return serviceTitle !== undefined ? (\n                                                    children\n                                                ) : (\n                                                    <Link {...homeLinkProps}>{children}</Link>\n                                                );\n                                            })()}\n                                        </div>\n                                        {operatorLogo !== undefined && (\n                                            <div\n                                                className={cx(\n                                                    fr.cx(\"fr-header__operator\"),\n                                                    classes.operator\n                                                )}\n                                            >\n                                                <Link {...homeLinkProps}>\n                                                    <img\n                                                        className={cx(\n                                                            fr.cx(\"fr-responsive-img\"),\n                                                            classes.operator\n                                                        )}\n                                                        style={(() => {\n                                                            switch (operatorLogo.orientation) {\n                                                                case \"vertical\":\n                                                                    return { \"width\": \"3.5rem\" };\n                                                                case \"horizontal\":\n                                                                    return {\n                                                                        \"maxWidth\": \"9.0625rem\"\n                                                                    };\n                                                            }\n                                                        })()}\n                                                        src={operatorLogo.imgUrl}\n                                                        alt={operatorLogo.alt}\n                                                    />\n                                                </Link>\n                                            </div>\n                                        )}\n\n                                        {(quickAccessItems.length > 0 ||\n                                            navigation !== undefined ||\n                                            isSearchBarEnabled) && (\n                                            <div\n                                                className={cx(\n                                                    fr.cx(\"fr-header__navbar\"),\n                                                    classes.navbar\n                                                )}\n                                            >\n                                                {isSearchBarEnabled && (\n                                                    <button\n                                                        id={`${id}-search-button`}\n                                                        className={fr.cx(\n                                                            \"fr-btn--search\",\n                                                            \"fr-btn\"\n                                                        )}\n                                                        data-fr-opened={false}\n                                                        aria-controls={searchModalId}\n                                                        title={tSearchBar(\"label\")}\n                                                    >\n                                                        {tSearchBar(\"label\")}\n                                                    </button>\n                                                )}\n                                                <button\n                                                    className={fr.cx(\"fr-btn--menu\", \"fr-btn\")}\n                                                    data-fr-opened=\"false\"\n                                                    aria-controls={menuModalId}\n                                                    aria-haspopup=\"menu\"\n                                                    id={menuButtonId}\n                                                    title={t(\"menu\")}\n                                                >\n                                                    {t(\"menu\")}\n                                                </button>\n                                            </div>\n                                        )}\n                                    </div>\n                                    {serviceTitle !== undefined && (\n                                        <div\n                                            className={cx(\n                                                fr.cx(\"fr-header__service\"),\n                                                classes.service\n                                            )}\n                                        >\n                                            <Link {...homeLinkProps}>\n                                                <p\n                                                    className={cx(\n                                                        fr.cx(\"fr-header__service-title\"),\n                                                        classes.serviceTitle\n                                                    )}\n                                                >\n                                                    {serviceTitle}\n                                                </p>\n                                            </Link>\n                                            {serviceTagline !== undefined && (\n                                                <p\n                                                    className={cx(\n                                                        fr.cx(\"fr-header__service-tagline\" as any),\n                                                        classes.serviceTagline\n                                                    )}\n                                                >\n                                                    {serviceTagline}\n                                                </p>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n\n                                {(quickAccessItems.length > 0 || isSearchBarEnabled) && (\n                                    <div className={fr.cx(\"fr-header__tools\")}>\n                                        {quickAccessItems.length > 0 && (\n                                            <div\n                                                className={cx(\n                                                    fr.cx(\"fr-header__tools-links\"),\n                                                    classes.toolsLinks\n                                                )}\n                                            >\n                                                {quickAccessNode}\n                                            </div>\n                                        )}\n\n                                        {isSearchBarEnabled && (\n                                            <div\n                                                className={fr.cx(\"fr-header__search\", \"fr-modal\")}\n                                                id={searchModalId}\n                                            >\n                                                <div\n                                                    className={fr.cx(\n                                                        \"fr-container\",\n                                                        \"fr-container-lg--fluid\"\n                                                    )}\n                                                >\n                                                    <button\n                                                        id={`${id}-search-button`}\n                                                        className={fr.cx(\"fr-btn--close\", \"fr-btn\")}\n                                                        aria-controls={searchModalId}\n                                                        title={t(\"close\")}\n                                                    >\n                                                        {t(\"close\")}\n                                                    </button>\n                                                    <div\n                                                        className={fr.cx(\"fr-search-bar\")}\n                                                        role=\"search\"\n                                                    >\n                                                        <label\n                                                            className={fr.cx(\"fr-label\")}\n                                                            htmlFor={searchInputId}\n                                                        >\n                                                            {tSearchBar(\"label\")}\n                                                        </label>\n                                                        {(\n                                                            renderSearchInput ??\n                                                            (({\n                                                                className,\n                                                                id,\n                                                                placeholder,\n                                                                type\n                                                            }) => (\n                                                                <input\n                                                                    className={className}\n                                                                    id={id}\n                                                                    placeholder={placeholder}\n                                                                    type={type}\n                                                                />\n                                                            ))\n                                                        )({\n                                                            \"className\": fr.cx(\"fr-input\"),\n                                                            \"id\": searchInputId,\n                                                            \"placeholder\": tSearchBar(\"label\"),\n                                                            \"type\": \"search\"\n                                                        })}\n                                                        <SearchButton\n                                                            id={`${id}-search-bar-button`}\n                                                            searchInputId={searchInputId}\n                                                            onClick={onSearchButtonClick}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    {(navigation !== undefined || quickAccessItems.length !== 0) && (\n                        <div\n                            className={cx(fr.cx(\"fr-header__menu\", \"fr-modal\"), classes.menu)}\n                            id={menuModalId}\n                            aria-labelledby={menuButtonId}\n                        >\n                            <div className={fr.cx(\"fr-container\")}>\n                                <button\n                                    id={`${id}-mobile-overlay-button-close`}\n                                    className={fr.cx(\"fr-btn--close\", \"fr-btn\")}\n                                    aria-controls={menuModalId}\n                                    title={t(\"close\")}\n                                >\n                                    {t(\"close\")}\n                                </button>\n                                <div\n                                    className={cx(\n                                        fr.cx(\"fr-header__menu-links\"),\n                                        classes.menuLinks\n                                    )}\n                                >\n                                    {quickAccessNode}\n                                </div>\n                                {navigation !== undefined &&\n                                    (navigation instanceof Array ? (\n                                        <MainNavigation\n                                            id={`${id}-main-navigation`}\n                                            items={navigation}\n                                        />\n                                    ) : (\n                                        navigation\n                                    ))}\n                            </div>\n                        </div>\n                    )}\n                </header>\n            </>\n        );\n    })\n);\n\nHeader.displayName = symToStr({ Header });\n\nexport default Header;\n\nexport const { useTranslation, addHeaderTranslations } = createComponentI18nApi({\n    \"componentName\": symToStr({ Header }),\n    \"frMessages\": {\n        /* spell-checker: disable */\n        \"menu\": \"Menu\",\n        \"close\": \"Fermer\"\n        /* spell-checker: enable */\n    }\n});\n\naddHeaderTranslations({\n    \"lang\": \"en\",\n    \"messages\": {\n        \"close\": \"Close\"\n    }\n});\n\nexport type HeaderQuickAccessItemProps = {\n    id?: string;\n    className?: string;\n    quickAccessItem: HeaderProps.QuickAccessItem;\n};\n\nexport function HeaderQuickAccessItem(props: HeaderQuickAccessItemProps): JSX.Element {\n    const { id: id_props, className, quickAccessItem } = props;\n\n    const { Link } = getLink();\n\n    const id = (function useClosure() {\n        const id = useId();\n\n        return (\n            id_props ??\n            (quickAccessItem.linkProps !== undefined\n                ? quickAccessItem.linkProps.id\n                : quickAccessItem.buttonProps.id) ??\n            `fr-header-quick-access-item${generateValidHtmlId({\n                \"text\": quickAccessItem.text,\n                \"fallback\": id\n            })}`\n        );\n    })();\n\n    return quickAccessItem.linkProps !== undefined ? (\n        <Link\n            {...quickAccessItem.linkProps}\n            id={id}\n            className={cx(\n                fr.cx(\"fr-btn\", quickAccessItem.iconId),\n                quickAccessItem.linkProps.className,\n                className\n            )}\n        >\n            {quickAccessItem.text}\n        </Link>\n    ) : (\n        <button\n            {...quickAccessItem.buttonProps}\n            id={id}\n            className={cx(\n                fr.cx(\"fr-btn\", quickAccessItem.iconId),\n                quickAccessItem.buttonProps.className,\n                className\n            )}\n        >\n            {quickAccessItem.text}\n        </button>\n    );\n}\n","import { useId } from \"react\";\n\n/**\n * Eulerian analytics requires every element to have a unique ID.\n * This hook help generate such an ID in the case they are not explicitly provided.\n */\nexport function useAnalyticsId(params: { explicitlyProvidedId?: string; defaultIdPrefix: string }) {\n    const { explicitlyProvidedId, defaultIdPrefix } = params;\n\n    const id = useId();\n\n    return explicitlyProvidedId ?? `${defaultIdPrefix}-${id}`;\n}\n","import type { ReactNode } from \"react\";\nimport type { RegisteredLinkProps } from \"../link\";\n\nlet wrap:\n    | {\n          brandTop: ReactNode;\n          homeLinkProps: RegisteredLinkProps & { title: string };\n      }\n    | undefined = undefined;\n\nexport function setBrandTopAndHomeLinkProps(params: {\n    brandTop: ReactNode;\n    homeLinkProps: RegisteredLinkProps & { title: string };\n}) {\n    wrap = params;\n}\n\nexport function getBrandTopAndHomeLinkProps() {\n    return wrap;\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { useReducer, useEffect } from \"react\";\nimport { headInsert } from \"keycloakify/tools/headInsert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\n\nexport function usePrepareTemplate(params: {\n    doFetchDefaultThemeResources: boolean;\n    styles?: string[];\n    scripts?: string[];\n    htmlClassName: string | undefined;\n    bodyClassName: string | undefined;\n}) {\n    const { doFetchDefaultThemeResources, styles = [], scripts = [], htmlClassName, bodyClassName } = params;\n\n    const [isReady, setReady] = useReducer(() => true, !doFetchDefaultThemeResources);\n\n    useEffect(() => {\n        if (!doFetchDefaultThemeResources) {\n            return;\n        }\n\n        let isUnmounted = false;\n\n        const removeArray: (() => void)[] = [];\n\n        (async () => {\n            const prLoadedArray: Promise<void>[] = [];\n\n            styles.reverse().forEach(href => {\n                const { prLoaded, remove } = headInsert({\n                    \"type\": \"css\",\n                    \"position\": \"prepend\",\n                    href\n                });\n\n                removeArray.push(remove);\n\n                prLoadedArray.push(prLoaded);\n            });\n\n            await Promise.all(prLoadedArray);\n\n            if (isUnmounted) {\n                return;\n            }\n\n            setReady();\n        })();\n\n        scripts.forEach(src => {\n            const { remove } = headInsert({\n                \"type\": \"javascript\",\n                src\n            });\n\n            removeArray.push(remove);\n        });\n\n        return () => {\n            isUnmounted = true;\n            removeArray.forEach(remove => remove());\n        };\n    }, []);\n\n    useSetClassName({\n        \"target\": \"html\",\n        \"className\": htmlClassName\n    });\n\n    useSetClassName({\n        \"target\": \"body\",\n        \"className\": bodyClassName\n    });\n\n    return { isReady };\n}\n\nfunction useSetClassName(params: { target: \"html\" | \"body\"; className: string | undefined }) {\n    const { target, className } = params;\n\n    useEffect(() => {\n        if (className === undefined) {\n            return;\n        }\n\n        const htmlClassList = document.getElementsByTagName(target)[0].classList;\n\n        const tokens = clsx(className).split(\" \");\n\n        htmlClassList.add(...tokens);\n\n        return () => {\n            htmlClassList.remove(...tokens);\n        };\n    }, [className]);\n}\n","if (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\n\nexport function headInsert(\n    params:\n        | {\n              type: \"css\";\n              href: string;\n              position: \"append\" | \"prepend\";\n          }\n        | {\n              type: \"javascript\";\n              src: string;\n          }\n): { remove: () => void; prLoaded: Promise<void> } {\n    const htmlElement = document.createElement(\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return \"link\";\n                case \"javascript\":\n                    return \"script\";\n            }\n        })()\n    );\n\n    const dLoaded = new Deferred<void>();\n\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n\n    Object.assign(\n        htmlElement,\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return {\n                        \"href\": params.href,\n                        \"type\": \"text/css\",\n                        \"rel\": \"stylesheet\",\n                        \"media\": \"screen,print\"\n                    };\n                case \"javascript\":\n                    return {\n                        \"src\": params.src,\n                        \"type\": \"text/javascript\"\n                    };\n            }\n        })()\n    );\n\n    document.getElementsByTagName(\"head\")[0][\n        (() => {\n            switch (params.type) {\n                case \"javascript\":\n                    return \"appendChild\";\n                case \"css\":\n                    return (() => {\n                        switch (params.position) {\n                            case \"append\":\n                                return \"appendChild\";\n                            case \"prepend\":\n                                return \"prepend\";\n                        }\n                    })();\n            }\n        })()\n    ](htmlElement);\n\n    return {\n        \"prLoaded\": dLoaded.pr,\n        \"remove\": () => htmlElement.remove()\n    };\n}\n","/** @see <https://docs.tsafe.dev/main/symtostr> */\nexport function symToStr<T extends Record<string, unknown>>(wrap: T): keyof T {\n    return Object.keys(wrap)[0];\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["Alert","memo","forwardRef","props","ref","className","id_props","id","severity","_props$as","as","HtmlTitleTag","_props$classes","classes","style","isSmall","small","title","description","_props$closable","closable","isClosable","props_isClosed","isClosed","onClose","rest","__rest","assert","useAnalyticsId","_useState","useState","_useState2","_slicedToArray","setIsClosed","_useState3","_useState4","buttonElement","setButtonElement","refShouldButtonGetFocus","useRef","refShouldSetRole","DescriptionTag","useEffect","undefined","current","focus","onCloseButtonClick","useConstCallback","t","useTranslation","React","Object","assign","cx","fr","concat","root","close","onClick","displayName","symToStr","_createComponentI18nA","createComponentI18nApi","addAlertTranslations","Button","props_id","prop_className","children","iconId","_props$iconPosition","iconPosition","_props$priority","priority","_props$size","size","linkProps","nativeButtonProps","disabled","type","Link","getLink","_toConsumableArray","_a","_b","Modal","_props$concealingBack","concealingBackdrop","_props$topAnchor","topAnchor","buttons_props","buttons","Array","titleId","role","reverse","map","i","doClosesModal","_a$doClosesModal","buttonProps","key","addModalTranslations","modal","params","isOpenedByDefault","hiddenControlButtonId","Component","overwriteReadonlyProp","open","modalElement","document","getElementById","window","dsfr","disclose","conceal","createModal","headerFooterDisplayItem","Display","getInputId","useId","theme","value","name","htmlFor","xmlns","width","height","viewBox","label","xlinkHref","componentOrUrl","ArtworkDarkSvg","ArtworkLightSvg","ArtworkSystemSvg","src","addDisplayTranslations","generateValidHtmlId","text","fallback","result","replace","Menu","links","list","_ref","_ref$isActive","isActive","_defineProperty","MegaMenu","leader","categories","tabIndex","paragraph","link","categoryMainLink","category","_ref2","j","addMegaMenuTranslations","MainNavigation","items","getMenuId","_ref$menuLinks","menuLinks","megaMenu","_ref$buttonProps","item","btn","length","menuList","megaMenuLeader","megaMenuCategory","addMainNavigationTranslations","SearchBar","label_props","_props$big","big","_props$renderInput","renderInput","placeholder","onButtonClick","inputId","SearchButton","searchInputId","addSearchBarTranslations","onClick_props","_useReducer","useReducer","x","forceUpdate","_useState2$","focusInputElement","getInputValue","resetInputValue","getIsInputFocused","setInputApi","inputValue","isControlledByUser","inputElement","is","activeElement","cleanups","_observeInputValue","callback_params","callback","descriptorToRestore","getOwnPropertyDescriptor","push","defineProperty","inputElementPrototype","getPrototypeOf","descriptor","_len","arguments","args","_key","get","apply","this","_len2","_key2","set","newValue","addEventListener","removeEventListener","event","timer","setTimeout","splice","indexOf","cleanup","clearTimeout","forEach","observeInputValue","blur","Header","brandTop","serviceTitle","serviceTagline","homeLinkProps","_props$navigation","navigation","_props$quickAccessIte","quickAccessItems","operatorLogo","renderSearchInput","onSearchButtonClick","menuModalId","menuButtonId","searchModalId","isSearchBarEnabled","setBrandTopAndHomeLinkProps","tSearchBar","useSearchBarTranslation","quickAccessNode","quickAccessItem","typeGuard","HeaderQuickAccessItem","body","bodyRow","brand","logo","operator","orientation","imgUrl","alt","navbar","service","toolsLinks","menu","addHeaderTranslations","explicitlyProvidedId","defaultIdPrefix","wrap","getBrandTopAndHomeLinkProps","createUseClassName","defaultClasses","useGetClassName","getClassName","classKey","clsx","usePrepareTemplate","doFetchDefaultThemeResources","_params$styles","styles","_params$scripts","scripts","htmlClassName","bodyClassName","_useReducer2","isReady","setReady","isUnmounted","removeArray","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prLoadedArray","_context","prev","next","href","_headInsert","headInsert","prLoaded","remove","Promise","all","abrupt","stop","useSetClassName","target","htmlClassList","getElementsByTagName","classList","tokens","split","add","HTMLElement","prototype","prepend","childNode","Error","insertBefore","firstChild","len","cls","arg","toAdd","isArray","k","htmlElement","createElement","dLoaded","Deferred","resolve","position","pr","exports","keys","_value","isMatched"],"sourceRoot":""}